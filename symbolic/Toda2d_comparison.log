FORM by J.Vermaseren,version 3.3(Jul  9 2009) Run at: Tue Jan 10 11:39:30 2017
    *==========================================================================
    *   This file is part of the demos for 
    *    "Generalization of the explicit expression for the Deprit generator 
    *       to  Hamiltonians nonlinearly dependent on small parameter"
    *     Andrey Nikolaev, ICPT, RDTeX, Russia, 2016, Andrey.Nikolaev@rdtex.ru
    *==========================================================================
    *  Comparison of the Gustavson [1], Hori [2], Deprit [3], Henrard [4],
    *    Dragt-Finn [5] and the explicit [6]  algorihms for the Toda 2D system
    *  1. Gustavson FG (1966), Astron J 71:670
    *  2. Hori G (1966), Publ Astron Soc Japan 18:287
    *  3. Deprit A (1969), Celestial Mech 1:12–30
    *  4. Henrard, J., in "Recent advances in dynamical astronomy" ed. Szebehely, p.
     248, 	
    *  5. Dragt AJ, Finn JM (1976), J. Math. Phys. 17:2215–2227
    *  6. Nikolaev A.S., arXiv:1612.05207
    *==========================================================================
    *          MAXORDER - maximum order in alpha,
    *          NDIM - number of dimensions
    *-------------------- 
    #define MAXORDER	"10"
    #define NDIM    	"2"
    CFunctions sqrt,qurt,asqrt,aqurt,exp; 
    Symbols l,m,n,k,alpha(:{'MAXORDER'}),z
    *-------------------- 
    *			The following are the canonical variables:
    *-------------------- 
    #do j=1,'NDIM'
    	zeta'j',eta'j',P'j',Q'j',p'j',q'j'
    #enddo
    ;
    Off statistics;
    .global
    *-------------------- 
    *	The Hamiltonian in P,Q  variables is:
    *-------------------- 
    #define NAME "Toda2d"
    Global HPQ=1/2*(P1^2 + P2^2)+ 1/24*(exp(2*Q2+2*sqrt(3)*Q1)+exp(2*Q2-2*sqrt(3)*Q1
    )+exp(-4*Q2))-1/8;
    B alpha;
    Print;
    .sort

   HPQ =
       - 1/8 + 1/2*P2^2 + 1/2*P1^2 + 1/24*exp( - 4*Q2) + 1/24*exp(2*Q2 - 2*
         sqrt(3)*Q1) + 1/24*exp(2*Q2 + 2*sqrt(3)*Q1);

    id exp(m?)=sum_(n,0,{'MAXORDER'+2},m^n*invfac_(n));
    #call eidentities()
    B alpha;
    Print;
    .store

   HPQ =
       + 1/2*Q2^2 - 1/3*Q2^3 + 1/2*Q2^4 - 1/3*Q2^5 + 11/45*Q2^6 - 2/15*Q2^7 + 
         43/630*Q2^8 - 17/567*Q2^9 + 19/1575*Q2^10 - 62/14175*Q2^11 + 683/
         467775*Q2^12 + 1/2*P2^2 + 1/2*Q1^2 + Q1^2*Q2 + Q1^2*Q2^2 + 2/3*Q1^2*
         Q2^3 + 1/3*Q1^2*Q2^4 + 2/15*Q1^2*Q2^5 + 2/45*Q1^2*Q2^6 + 4/315*Q1^2*
         Q2^7 + 1/315*Q1^2*Q2^8 + 2/2835*Q1^2*Q2^9 + 2/14175*Q1^2*Q2^10 + 1/2*
         Q1^4 + Q1^4*Q2 + Q1^4*Q2^2 + 2/3*Q1^4*Q2^3 + 1/3*Q1^4*Q2^4 + 2/15*
         Q1^4*Q2^5 + 2/45*Q1^4*Q2^6 + 4/315*Q1^4*Q2^7 + 1/315*Q1^4*Q2^8 + 1/5*
         Q1^6 + 2/5*Q1^6*Q2 + 2/5*Q1^6*Q2^2 + 4/15*Q1^6*Q2^3 + 2/15*Q1^6*Q2^4
          + 4/75*Q1^6*Q2^5 + 4/225*Q1^6*Q2^6 + 3/70*Q1^8 + 3/35*Q1^8*Q2 + 3/35
         *Q1^8*Q2^2 + 2/35*Q1^8*Q2^3 + 1/35*Q1^8*Q2^4 + 1/175*Q1^10 + 2/175*
         Q1^10*Q2 + 2/175*Q1^10*Q2^2 + 1/1925*Q1^12 + 1/2*P1^2;

    *-------------------- 
    *	A scaling transform introduces a small parameter:
    *-------------------- 
    G H=HPQ/alpha^2;
    #do j=1,'NDIM'
    id P'j'=alpha*p'j';
    id Q'j'=alpha*q'j';
    #enddo
    .sort
    #call eidentities()
    B alpha;
    Print;
    .store

   H =
       + alpha * (  - 1/3*q2^3 + q1^2*q2 )

       + alpha^2 * ( 1/2*q2^4 + q1^2*q2^2 + 1/2*q1^4 )

       + alpha^3 * (  - 1/3*q2^5 + 2/3*q1^2*q2^3 + q1^4*q2 )

       + alpha^4 * ( 11/45*q2^6 + 1/3*q1^2*q2^4 + q1^4*q2^2 + 1/5*q1^6 )

       + alpha^5 * (  - 2/15*q2^7 + 2/15*q1^2*q2^5 + 2/3*q1^4*q2^3 + 2/5*q1^6*
         q2 )

       + alpha^6 * ( 43/630*q2^8 + 2/45*q1^2*q2^6 + 1/3*q1^4*q2^4 + 2/5*q1^6*
         q2^2 + 3/70*q1^8 )

       + alpha^7 * (  - 17/567*q2^9 + 4/315*q1^2*q2^7 + 2/15*q1^4*q2^5 + 4/15*
         q1^6*q2^3 + 3/35*q1^8*q2 )

       + alpha^8 * ( 19/1575*q2^10 + 1/315*q1^2*q2^8 + 2/45*q1^4*q2^6 + 2/15*
         q1^6*q2^4 + 3/35*q1^8*q2^2 + 1/175*q1^10 )

       + alpha^9 * (  - 62/14175*q2^11 + 2/2835*q1^2*q2^9 + 4/315*q1^4*q2^7 + 
         4/75*q1^6*q2^5 + 2/35*q1^8*q2^3 + 2/175*q1^10*q2 )

       + alpha^10 * ( 683/467775*q2^12 + 2/14175*q1^2*q2^10 + 1/315*q1^4*q2^8
          + 4/225*q1^6*q2^6 + 1/35*q1^8*q2^4 + 2/175*q1^10*q2^2 + 1/1925*q1^12
          )

       + 1/2*q2^2 + 1/2*p2^2 + 1/2*q1^2 + 1/2*p1^2;

    #call frequencies()

   Omega1 =
      1;


   Omega2 =
      1;

    Global Hetazeta = H;
    #call pqtoetazeta()
    B alpha;
    Print;
    .store

   Hetazeta =
       + alpha * ( 1/4*sqrt(2)*zeta2*eta2^2 - 1/12*sqrt(2)*zeta2^3 - 1/4*sqrt(
         2)*eta1^2*zeta2 - 1/2*sqrt(2)*zeta1*eta1*eta2 + 1/4*sqrt(2)*zeta1^2*
         zeta2 + 1/12*sqrt(2)*i_*eta2^3 - 1/4*sqrt(2)*i_*zeta2^2*eta2 - 1/4*
         sqrt(2)*i_*eta1^2*eta2 + 1/2*sqrt(2)*i_*zeta1*eta1*zeta2 + 1/4*sqrt(2
         )*i_*zeta1^2*eta2 )

       + alpha^2 * ( 1/8*eta2^4 - 3/4*zeta2^2*eta2^2 + 1/8*zeta2^4 + 1/4*
         eta1^2*eta2^2 - 1/4*eta1^2*zeta2^2 + 1/8*eta1^4 - zeta1*eta1*zeta2*
         eta2 - 1/4*zeta1^2*eta2^2 + 1/4*zeta1^2*zeta2^2 - 3/4*zeta1^2*eta1^2
          + 1/8*zeta1^4 - 1/2*i_*zeta2*eta2^3 + 1/2*i_*zeta2^3*eta2 - 1/2*i_*
         eta1^2*zeta2*eta2 - 1/2*i_*zeta1*eta1*eta2^2 + 1/2*i_*zeta1*eta1*
         zeta2^2 - 1/2*i_*zeta1*eta1^3 + 1/2*i_*zeta1^2*zeta2*eta2 + 1/2*i_*
         zeta1^3*eta1 )

       + alpha^3 * (  - 5/24*sqrt(2)*zeta2*eta2^4 + 5/12*sqrt(2)*zeta2^3*
         eta2^2 - 1/24*sqrt(2)*zeta2^5 + 1/4*sqrt(2)*eta1^2*zeta2*eta2^2 - 1/
         12*sqrt(2)*eta1^2*zeta2^3 + 1/8*sqrt(2)*eta1^4*zeta2 + 1/6*sqrt(2)*
         zeta1*eta1*eta2^3 - 1/2*sqrt(2)*zeta1*eta1*zeta2^2*eta2 + 1/2*sqrt(2)
         *zeta1*eta1^3*eta2 - 1/4*sqrt(2)*zeta1^2*zeta2*eta2^2 + 1/12*sqrt(2)*
         zeta1^2*zeta2^3 - 3/4*sqrt(2)*zeta1^2*eta1^2*zeta2 - 1/2*sqrt(2)*
         zeta1^3*eta1*eta2 + 1/8*sqrt(2)*zeta1^4*zeta2 - 1/24*sqrt(2)*i_*
         eta2^5 + 5/12*sqrt(2)*i_*zeta2^2*eta2^3 - 5/24*sqrt(2)*i_*zeta2^4*
         eta2 + 1/12*sqrt(2)*i_*eta1^2*eta2^3 - 1/4*sqrt(2)*i_*eta1^2*zeta2^2*
         eta2 + 1/8*sqrt(2)*i_*eta1^4*eta2 - 1/2*sqrt(2)*i_*zeta1*eta1*zeta2*
         eta2^2 + 1/6*sqrt(2)*i_*zeta1*eta1*zeta2^3 - 1/2*sqrt(2)*i_*zeta1*
         eta1^3*zeta2 - 1/12*sqrt(2)*i_*zeta1^2*eta2^3 + 1/4*sqrt(2)*i_*
         zeta1^2*zeta2^2*eta2 - 3/4*sqrt(2)*i_*zeta1^2*eta1^2*eta2 + 1/2*sqrt(
         2)*i_*zeta1^3*eta1*zeta2 + 1/8*sqrt(2)*i_*zeta1^4*eta2 )

       + alpha^4 * (  - 11/360*eta2^6 + 11/24*zeta2^2*eta2^4 - 11/24*zeta2^4*
         eta2^2 + 11/360*zeta2^6 - 1/24*eta1^2*eta2^4 + 1/4*eta1^2*zeta2^2*
         eta2^2 - 1/24*eta1^2*zeta2^4 - 1/8*eta1^4*eta2^2 + 1/8*eta1^4*zeta2^2
          - 1/40*eta1^6 + 1/3*zeta1*eta1*zeta2*eta2^3 - 1/3*zeta1*eta1*zeta2^3
         *eta2 + zeta1*eta1^3*zeta2*eta2 + 1/24*zeta1^2*eta2^4 - 1/4*zeta1^2*
         zeta2^2*eta2^2 + 1/24*zeta1^2*zeta2^4 + 3/4*zeta1^2*eta1^2*eta2^2 - 3/
         4*zeta1^2*eta1^2*zeta2^2 + 3/8*zeta1^2*eta1^4 - zeta1^3*eta1*zeta2*
         eta2 - 1/8*zeta1^4*eta2^2 + 1/8*zeta1^4*zeta2^2 - 3/8*zeta1^4*eta1^2
          + 1/40*zeta1^6 + 11/60*i_*zeta2*eta2^5 - 11/18*i_*zeta2^3*eta2^3 + 
         11/60*i_*zeta2^5*eta2 + 1/6*i_*eta1^2*zeta2*eta2^3 - 1/6*i_*eta1^2*
         zeta2^3*eta2 + 1/4*i_*eta1^4*zeta2*eta2 + 1/12*i_*zeta1*eta1*eta2^4
          - 1/2*i_*zeta1*eta1*zeta2^2*eta2^2 + 1/12*i_*zeta1*eta1*zeta2^4 + 1/
         2*i_*zeta1*eta1^3*eta2^2 - 1/2*i_*zeta1*eta1^3*zeta2^2 + 3/20*i_*
         zeta1*eta1^5 - 1/6*i_*zeta1^2*zeta2*eta2^3 + 1/6*i_*zeta1^2*zeta2^3*
         eta2 - 3/2*i_*zeta1^2*eta1^2*zeta2*eta2 - 1/2*i_*zeta1^3*eta1*eta2^2
          + 1/2*i_*zeta1^3*eta1*zeta2^2 - 1/2*i_*zeta1^3*eta1^3 + 1/4*i_*
         zeta1^4*zeta2*eta2 + 3/20*i_*zeta1^5*eta1 )

       + alpha^5 * ( 7/120*sqrt(2)*zeta2*eta2^6 - 7/24*sqrt(2)*zeta2^3*eta2^4
          + 7/40*sqrt(2)*zeta2^5*eta2^2 - 1/120*sqrt(2)*zeta2^7 - 1/24*sqrt(2)
         *eta1^2*zeta2*eta2^4 + 1/12*sqrt(2)*eta1^2*zeta2^3*eta2^2 - 1/120*
         sqrt(2)*eta1^2*zeta2^5 - 1/8*sqrt(2)*eta1^4*zeta2*eta2^2 + 1/24*sqrt(
         2)*eta1^4*zeta2^3 - 1/40*sqrt(2)*eta1^6*zeta2 - 1/60*sqrt(2)*zeta1*
         eta1*eta2^5 + 1/6*sqrt(2)*zeta1*eta1*zeta2^2*eta2^3 - 1/12*sqrt(2)*
         zeta1*eta1*zeta2^4*eta2 - 1/6*sqrt(2)*zeta1*eta1^3*eta2^3 + 1/2*sqrt(
         2)*zeta1*eta1^3*zeta2^2*eta2 - 3/20*sqrt(2)*zeta1*eta1^5*eta2 + 1/24*
         sqrt(2)*zeta1^2*zeta2*eta2^4 - 1/12*sqrt(2)*zeta1^2*zeta2^3*eta2^2 + 
         1/120*sqrt(2)*zeta1^2*zeta2^5 + 3/4*sqrt(2)*zeta1^2*eta1^2*zeta2*
         eta2^2 - 1/4*sqrt(2)*zeta1^2*eta1^2*zeta2^3 + 3/8*sqrt(2)*zeta1^2*
         eta1^4*zeta2 + 1/6*sqrt(2)*zeta1^3*eta1*eta2^3 - 1/2*sqrt(2)*zeta1^3*
         eta1*zeta2^2*eta2 + 1/2*sqrt(2)*zeta1^3*eta1^3*eta2 - 1/8*sqrt(2)*
         zeta1^4*zeta2*eta2^2 + 1/24*sqrt(2)*zeta1^4*zeta2^3 - 3/8*sqrt(2)*
         zeta1^4*eta1^2*zeta2 - 3/20*sqrt(2)*zeta1^5*eta1*eta2 + 1/40*sqrt(2)*
         zeta1^6*zeta2 + 1/120*sqrt(2)*i_*eta2^7 - 7/40*sqrt(2)*i_*zeta2^2*
         eta2^5 + 7/24*sqrt(2)*i_*zeta2^4*eta2^3 - 7/120*sqrt(2)*i_*zeta2^6*
         eta2 - 1/120*sqrt(2)*i_*eta1^2*eta2^5 + 1/12*sqrt(2)*i_*eta1^2*
         zeta2^2*eta2^3 - 1/24*sqrt(2)*i_*eta1^2*zeta2^4*eta2 - 1/24*sqrt(2)*
         i_*eta1^4*eta2^3 + 1/8*sqrt(2)*i_*eta1^4*zeta2^2*eta2 - 1/40*sqrt(2)*
         i_*eta1^6*eta2 + 1/12*sqrt(2)*i_*zeta1*eta1*zeta2*eta2^4 - 1/6*sqrt(2
         )*i_*zeta1*eta1*zeta2^3*eta2^2 + 1/60*sqrt(2)*i_*zeta1*eta1*zeta2^5
          + 1/2*sqrt(2)*i_*zeta1*eta1^3*zeta2*eta2^2 - 1/6*sqrt(2)*i_*zeta1*
         eta1^3*zeta2^3 + 3/20*sqrt(2)*i_*zeta1*eta1^5*zeta2 + 1/120*sqrt(2)*
         i_*zeta1^2*eta2^5 - 1/12*sqrt(2)*i_*zeta1^2*zeta2^2*eta2^3 + 1/24*
         sqrt(2)*i_*zeta1^2*zeta2^4*eta2 + 1/4*sqrt(2)*i_*zeta1^2*eta1^2*
         eta2^3 - 3/4*sqrt(2)*i_*zeta1^2*eta1^2*zeta2^2*eta2 + 3/8*sqrt(2)*i_*
         zeta1^2*eta1^4*eta2 - 1/2*sqrt(2)*i_*zeta1^3*eta1*zeta2*eta2^2 + 1/6*
         sqrt(2)*i_*zeta1^3*eta1*zeta2^3 - 1/2*sqrt(2)*i_*zeta1^3*eta1^3*zeta2
          - 1/24*sqrt(2)*i_*zeta1^4*eta2^3 + 1/8*sqrt(2)*i_*zeta1^4*zeta2^2*
         eta2 - 3/8*sqrt(2)*i_*zeta1^4*eta1^2*eta2 + 3/20*sqrt(2)*i_*zeta1^5*
         eta1*zeta2 + 1/40*sqrt(2)*i_*zeta1^6*eta2 )

       + alpha^6 * ( 43/10080*eta2^8 - 43/360*zeta2^2*eta2^6 + 43/144*zeta2^4*
         eta2^4 - 43/360*zeta2^6*eta2^2 + 43/10080*zeta2^8 + 1/360*eta1^2*
         eta2^6 - 1/24*eta1^2*zeta2^2*eta2^4 + 1/24*eta1^2*zeta2^4*eta2^2 - 1/
         360*eta1^2*zeta2^6 + 1/48*eta1^4*eta2^4 - 1/8*eta1^4*zeta2^2*eta2^2
          + 1/48*eta1^4*zeta2^4 + 1/40*eta1^6*eta2^2 - 1/40*eta1^6*zeta2^2 + 3/
         1120*eta1^8 - 1/30*zeta1*eta1*zeta2*eta2^5 + 1/9*zeta1*eta1*zeta2^3*
         eta2^3 - 1/30*zeta1*eta1*zeta2^5*eta2 - 1/3*zeta1*eta1^3*zeta2*eta2^3
          + 1/3*zeta1*eta1^3*zeta2^3*eta2 - 3/10*zeta1*eta1^5*zeta2*eta2 - 1/
         360*zeta1^2*eta2^6 + 1/24*zeta1^2*zeta2^2*eta2^4 - 1/24*zeta1^2*
         zeta2^4*eta2^2 + 1/360*zeta1^2*zeta2^6 - 1/8*zeta1^2*eta1^2*eta2^4 + 
         3/4*zeta1^2*eta1^2*zeta2^2*eta2^2 - 1/8*zeta1^2*eta1^2*zeta2^4 - 3/8*
         zeta1^2*eta1^4*eta2^2 + 3/8*zeta1^2*eta1^4*zeta2^2 - 3/40*zeta1^2*
         eta1^6 + 1/3*zeta1^3*eta1*zeta2*eta2^3 - 1/3*zeta1^3*eta1*zeta2^3*
         eta2 + zeta1^3*eta1^3*zeta2*eta2 + 1/48*zeta1^4*eta2^4 - 1/8*zeta1^4*
         zeta2^2*eta2^2 + 1/48*zeta1^4*zeta2^4 + 3/8*zeta1^4*eta1^2*eta2^2 - 3/
         8*zeta1^4*eta1^2*zeta2^2 + 3/16*zeta1^4*eta1^4 - 3/10*zeta1^5*eta1*
         zeta2*eta2 - 1/40*zeta1^6*eta2^2 + 1/40*zeta1^6*zeta2^2 - 3/40*
         zeta1^6*eta1^2 + 3/1120*zeta1^8 - 43/1260*i_*zeta2*eta2^7 + 43/180*i_
         *zeta2^3*eta2^5 - 43/180*i_*zeta2^5*eta2^3 + 43/1260*i_*zeta2^7*eta2
          - 1/60*i_*eta1^2*zeta2*eta2^5 + 1/18*i_*eta1^2*zeta2^3*eta2^3 - 1/60
         *i_*eta1^2*zeta2^5*eta2 - 1/12*i_*eta1^4*zeta2*eta2^3 + 1/12*i_*
         eta1^4*zeta2^3*eta2 - 1/20*i_*eta1^6*zeta2*eta2 - 1/180*i_*zeta1*eta1
         *eta2^6 + 1/12*i_*zeta1*eta1*zeta2^2*eta2^4 - 1/12*i_*zeta1*eta1*
         zeta2^4*eta2^2 + 1/180*i_*zeta1*eta1*zeta2^6 - 1/12*i_*zeta1*eta1^3*
         eta2^4 + 1/2*i_*zeta1*eta1^3*zeta2^2*eta2^2 - 1/12*i_*zeta1*eta1^3*
         zeta2^4 - 3/20*i_*zeta1*eta1^5*eta2^2 + 3/20*i_*zeta1*eta1^5*zeta2^2
          - 3/140*i_*zeta1*eta1^7 + 1/60*i_*zeta1^2*zeta2*eta2^5 - 1/18*i_*
         zeta1^2*zeta2^3*eta2^3 + 1/60*i_*zeta1^2*zeta2^5*eta2 + 1/2*i_*
         zeta1^2*eta1^2*zeta2*eta2^3 - 1/2*i_*zeta1^2*eta1^2*zeta2^3*eta2 + 3/
         4*i_*zeta1^2*eta1^4*zeta2*eta2 + 1/12*i_*zeta1^3*eta1*eta2^4 - 1/2*i_
         *zeta1^3*eta1*zeta2^2*eta2^2 + 1/12*i_*zeta1^3*eta1*zeta2^4 + 1/2*i_*
         zeta1^3*eta1^3*eta2^2 - 1/2*i_*zeta1^3*eta1^3*zeta2^2 + 3/20*i_*
         zeta1^3*eta1^5 - 1/12*i_*zeta1^4*zeta2*eta2^3 + 1/12*i_*zeta1^4*
         zeta2^3*eta2 - 3/4*i_*zeta1^4*eta1^2*zeta2*eta2 - 3/20*i_*zeta1^5*
         eta1*eta2^2 + 3/20*i_*zeta1^5*eta1*zeta2^2 - 3/20*i_*zeta1^5*eta1^3
          + 1/20*i_*zeta1^6*zeta2*eta2 + 3/140*i_*zeta1^7*eta1 )

       + alpha^7 * (  - 17/2016*sqrt(2)*zeta2*eta2^8 + 17/216*sqrt(2)*zeta2^3*
         eta2^6 - 17/144*sqrt(2)*zeta2^5*eta2^4 + 17/504*sqrt(2)*zeta2^7*
         eta2^2 - 17/18144*sqrt(2)*zeta2^9 + 1/360*sqrt(2)*eta1^2*zeta2*eta2^6
          - 1/72*sqrt(2)*eta1^2*zeta2^3*eta2^4 + 1/120*sqrt(2)*eta1^2*zeta2^5*
         eta2^2 - 1/2520*sqrt(2)*eta1^2*zeta2^7 + 1/48*sqrt(2)*eta1^4*zeta2*
         eta2^4 - 1/24*sqrt(2)*eta1^4*zeta2^3*eta2^2 + 1/240*sqrt(2)*eta1^4*
         zeta2^5 + 1/40*sqrt(2)*eta1^6*zeta2*eta2^2 - 1/120*sqrt(2)*eta1^6*
         zeta2^3 + 3/1120*sqrt(2)*eta1^8*zeta2 + 1/1260*sqrt(2)*zeta1*eta1*
         eta2^7 - 1/60*sqrt(2)*zeta1*eta1*zeta2^2*eta2^5 + 1/36*sqrt(2)*zeta1*
         eta1*zeta2^4*eta2^3 - 1/180*sqrt(2)*zeta1*eta1*zeta2^6*eta2 + 1/60*
         sqrt(2)*zeta1*eta1^3*eta2^5 - 1/6*sqrt(2)*zeta1*eta1^3*zeta2^2*eta2^3
          + 1/12*sqrt(2)*zeta1*eta1^3*zeta2^4*eta2 + 1/20*sqrt(2)*zeta1*eta1^5
         *eta2^3 - 3/20*sqrt(2)*zeta1*eta1^5*zeta2^2*eta2 + 3/140*sqrt(2)*
         zeta1*eta1^7*eta2 - 1/360*sqrt(2)*zeta1^2*zeta2*eta2^6 + 1/72*sqrt(2)
         *zeta1^2*zeta2^3*eta2^4 - 1/120*sqrt(2)*zeta1^2*zeta2^5*eta2^2 + 1/
         2520*sqrt(2)*zeta1^2*zeta2^7 - 1/8*sqrt(2)*zeta1^2*eta1^2*zeta2*
         eta2^4 + 1/4*sqrt(2)*zeta1^2*eta1^2*zeta2^3*eta2^2 - 1/40*sqrt(2)*
         zeta1^2*eta1^2*zeta2^5 - 3/8*sqrt(2)*zeta1^2*eta1^4*zeta2*eta2^2 + 1/
         8*sqrt(2)*zeta1^2*eta1^4*zeta2^3 - 3/40*sqrt(2)*zeta1^2*eta1^6*zeta2
          - 1/60*sqrt(2)*zeta1^3*eta1*eta2^5 + 1/6*sqrt(2)*zeta1^3*eta1*
         zeta2^2*eta2^3 - 1/12*sqrt(2)*zeta1^3*eta1*zeta2^4*eta2 - 1/6*sqrt(2)
         *zeta1^3*eta1^3*eta2^3 + 1/2*sqrt(2)*zeta1^3*eta1^3*zeta2^2*eta2 - 3/
         20*sqrt(2)*zeta1^3*eta1^5*eta2 + 1/48*sqrt(2)*zeta1^4*zeta2*eta2^4 - 
         1/24*sqrt(2)*zeta1^4*zeta2^3*eta2^2 + 1/240*sqrt(2)*zeta1^4*zeta2^5
          + 3/8*sqrt(2)*zeta1^4*eta1^2*zeta2*eta2^2 - 1/8*sqrt(2)*zeta1^4*
         eta1^2*zeta2^3 + 3/16*sqrt(2)*zeta1^4*eta1^4*zeta2 + 1/20*sqrt(2)*
         zeta1^5*eta1*eta2^3 - 3/20*sqrt(2)*zeta1^5*eta1*zeta2^2*eta2 + 3/20*
         sqrt(2)*zeta1^5*eta1^3*eta2 - 1/40*sqrt(2)*zeta1^6*zeta2*eta2^2 + 1/
         120*sqrt(2)*zeta1^6*zeta2^3 - 3/40*sqrt(2)*zeta1^6*eta1^2*zeta2 - 3/
         140*sqrt(2)*zeta1^7*eta1*eta2 + 3/1120*sqrt(2)*zeta1^8*zeta2 - 17/
         18144*sqrt(2)*i_*eta2^9 + 17/504*sqrt(2)*i_*zeta2^2*eta2^7 - 17/144*
         sqrt(2)*i_*zeta2^4*eta2^5 + 17/216*sqrt(2)*i_*zeta2^6*eta2^3 - 17/
         2016*sqrt(2)*i_*zeta2^8*eta2 + 1/2520*sqrt(2)*i_*eta1^2*eta2^7 - 1/
         120*sqrt(2)*i_*eta1^2*zeta2^2*eta2^5 + 1/72*sqrt(2)*i_*eta1^2*zeta2^4
         *eta2^3 - 1/360*sqrt(2)*i_*eta1^2*zeta2^6*eta2 + 1/240*sqrt(2)*i_*
         eta1^4*eta2^5 - 1/24*sqrt(2)*i_*eta1^4*zeta2^2*eta2^3 + 1/48*sqrt(2)*
         i_*eta1^4*zeta2^4*eta2 + 1/120*sqrt(2)*i_*eta1^6*eta2^3 - 1/40*sqrt(2
         )*i_*eta1^6*zeta2^2*eta2 + 3/1120*sqrt(2)*i_*eta1^8*eta2 - 1/180*
         sqrt(2)*i_*zeta1*eta1*zeta2*eta2^6 + 1/36*sqrt(2)*i_*zeta1*eta1*
         zeta2^3*eta2^4 - 1/60*sqrt(2)*i_*zeta1*eta1*zeta2^5*eta2^2 + 1/1260*
         sqrt(2)*i_*zeta1*eta1*zeta2^7 - 1/12*sqrt(2)*i_*zeta1*eta1^3*zeta2*
         eta2^4 + 1/6*sqrt(2)*i_*zeta1*eta1^3*zeta2^3*eta2^2 - 1/60*sqrt(2)*i_
         *zeta1*eta1^3*zeta2^5 - 3/20*sqrt(2)*i_*zeta1*eta1^5*zeta2*eta2^2 + 1/
         20*sqrt(2)*i_*zeta1*eta1^5*zeta2^3 - 3/140*sqrt(2)*i_*zeta1*eta1^7*
         zeta2 - 1/2520*sqrt(2)*i_*zeta1^2*eta2^7 + 1/120*sqrt(2)*i_*zeta1^2*
         zeta2^2*eta2^5 - 1/72*sqrt(2)*i_*zeta1^2*zeta2^4*eta2^3 + 1/360*sqrt(
         2)*i_*zeta1^2*zeta2^6*eta2 - 1/40*sqrt(2)*i_*zeta1^2*eta1^2*eta2^5 + 
         1/4*sqrt(2)*i_*zeta1^2*eta1^2*zeta2^2*eta2^3 - 1/8*sqrt(2)*i_*zeta1^2
         *eta1^2*zeta2^4*eta2 - 1/8*sqrt(2)*i_*zeta1^2*eta1^4*eta2^3 + 3/8*
         sqrt(2)*i_*zeta1^2*eta1^4*zeta2^2*eta2 - 3/40*sqrt(2)*i_*zeta1^2*
         eta1^6*eta2 + 1/12*sqrt(2)*i_*zeta1^3*eta1*zeta2*eta2^4 - 1/6*sqrt(2)
         *i_*zeta1^3*eta1*zeta2^3*eta2^2 + 1/60*sqrt(2)*i_*zeta1^3*eta1*
         zeta2^5 + 1/2*sqrt(2)*i_*zeta1^3*eta1^3*zeta2*eta2^2 - 1/6*sqrt(2)*i_
         *zeta1^3*eta1^3*zeta2^3 + 3/20*sqrt(2)*i_*zeta1^3*eta1^5*zeta2 + 1/
         240*sqrt(2)*i_*zeta1^4*eta2^5 - 1/24*sqrt(2)*i_*zeta1^4*zeta2^2*
         eta2^3 + 1/48*sqrt(2)*i_*zeta1^4*zeta2^4*eta2 + 1/8*sqrt(2)*i_*
         zeta1^4*eta1^2*eta2^3 - 3/8*sqrt(2)*i_*zeta1^4*eta1^2*zeta2^2*eta2 + 
         3/16*sqrt(2)*i_*zeta1^4*eta1^4*eta2 - 3/20*sqrt(2)*i_*zeta1^5*eta1*
         zeta2*eta2^2 + 1/20*sqrt(2)*i_*zeta1^5*eta1*zeta2^3 - 3/20*sqrt(2)*i_
         *zeta1^5*eta1^3*zeta2 - 1/120*sqrt(2)*i_*zeta1^6*eta2^3 + 1/40*sqrt(2
         )*i_*zeta1^6*zeta2^2*eta2 - 3/40*sqrt(2)*i_*zeta1^6*eta1^2*eta2 + 3/
         140*sqrt(2)*i_*zeta1^7*eta1*zeta2 + 3/1120*sqrt(2)*i_*zeta1^8*eta2 )

       + alpha^8 * (  - 19/50400*eta2^10 + 19/1120*zeta2^2*eta2^8 - 19/240*
         zeta2^4*eta2^6 + 19/240*zeta2^6*eta2^4 - 19/1120*zeta2^8*eta2^2 + 19/
         50400*zeta2^10 - 1/10080*eta1^2*eta2^8 + 1/360*eta1^2*zeta2^2*eta2^6
          - 1/144*eta1^2*zeta2^4*eta2^4 + 1/360*eta1^2*zeta2^6*eta2^2 - 1/
         10080*eta1^2*zeta2^8 - 1/720*eta1^4*eta2^6 + 1/48*eta1^4*zeta2^2*
         eta2^4 - 1/48*eta1^4*zeta2^4*eta2^2 + 1/720*eta1^4*zeta2^6 - 1/240*
         eta1^6*eta2^4 + 1/40*eta1^6*zeta2^2*eta2^2 - 1/240*eta1^6*zeta2^4 - 3/
         1120*eta1^8*eta2^2 + 3/1120*eta1^8*zeta2^2 - 1/5600*eta1^10 + 1/630*
         zeta1*eta1*zeta2*eta2^7 - 1/90*zeta1*eta1*zeta2^3*eta2^5 + 1/90*zeta1
         *eta1*zeta2^5*eta2^3 - 1/630*zeta1*eta1*zeta2^7*eta2 + 1/30*zeta1*
         eta1^3*zeta2*eta2^5 - 1/9*zeta1*eta1^3*zeta2^3*eta2^3 + 1/30*zeta1*
         eta1^3*zeta2^5*eta2 + 1/10*zeta1*eta1^5*zeta2*eta2^3 - 1/10*zeta1*
         eta1^5*zeta2^3*eta2 + 3/70*zeta1*eta1^7*zeta2*eta2 + 1/10080*zeta1^2*
         eta2^8 - 1/360*zeta1^2*zeta2^2*eta2^6 + 1/144*zeta1^2*zeta2^4*eta2^4
          - 1/360*zeta1^2*zeta2^6*eta2^2 + 1/10080*zeta1^2*zeta2^8 + 1/120*
         zeta1^2*eta1^2*eta2^6 - 1/8*zeta1^2*eta1^2*zeta2^2*eta2^4 + 1/8*
         zeta1^2*eta1^2*zeta2^4*eta2^2 - 1/120*zeta1^2*eta1^2*zeta2^6 + 1/16*
         zeta1^2*eta1^4*eta2^4 - 3/8*zeta1^2*eta1^4*zeta2^2*eta2^2 + 1/16*
         zeta1^2*eta1^4*zeta2^4 + 3/40*zeta1^2*eta1^6*eta2^2 - 3/40*zeta1^2*
         eta1^6*zeta2^2 + 9/1120*zeta1^2*eta1^8 - 1/30*zeta1^3*eta1*zeta2*
         eta2^5 + 1/9*zeta1^3*eta1*zeta2^3*eta2^3 - 1/30*zeta1^3*eta1*zeta2^5*
         eta2 - 1/3*zeta1^3*eta1^3*zeta2*eta2^3 + 1/3*zeta1^3*eta1^3*zeta2^3*
         eta2 - 3/10*zeta1^3*eta1^5*zeta2*eta2 - 1/720*zeta1^4*eta2^6 + 1/48*
         zeta1^4*zeta2^2*eta2^4 - 1/48*zeta1^4*zeta2^4*eta2^2 + 1/720*zeta1^4*
         zeta2^6 - 1/16*zeta1^4*eta1^2*eta2^4 + 3/8*zeta1^4*eta1^2*zeta2^2*
         eta2^2 - 1/16*zeta1^4*eta1^2*zeta2^4 - 3/16*zeta1^4*eta1^4*eta2^2 + 3/
         16*zeta1^4*eta1^4*zeta2^2 - 3/80*zeta1^4*eta1^6 + 1/10*zeta1^5*eta1*
         zeta2*eta2^3 - 1/10*zeta1^5*eta1*zeta2^3*eta2 + 3/10*zeta1^5*eta1^3*
         zeta2*eta2 + 1/240*zeta1^6*eta2^4 - 1/40*zeta1^6*zeta2^2*eta2^2 + 1/
         240*zeta1^6*zeta2^4 + 3/40*zeta1^6*eta1^2*eta2^2 - 3/40*zeta1^6*
         eta1^2*zeta2^2 + 3/80*zeta1^6*eta1^4 - 3/70*zeta1^7*eta1*zeta2*eta2
          - 3/1120*zeta1^8*eta2^2 + 3/1120*zeta1^8*zeta2^2 - 9/1120*zeta1^8*
         eta1^2 + 1/5600*zeta1^10 + 19/5040*i_*zeta2*eta2^9 - 19/420*i_*
         zeta2^3*eta2^7 + 19/200*i_*zeta2^5*eta2^5 - 19/420*i_*zeta2^7*eta2^3
          + 19/5040*i_*zeta2^9*eta2 + 1/1260*i_*eta1^2*zeta2*eta2^7 - 1/180*i_
         *eta1^2*zeta2^3*eta2^5 + 1/180*i_*eta1^2*zeta2^5*eta2^3 - 1/1260*i_*
         eta1^2*zeta2^7*eta2 + 1/120*i_*eta1^4*zeta2*eta2^5 - 1/36*i_*eta1^4*
         zeta2^3*eta2^3 + 1/120*i_*eta1^4*zeta2^5*eta2 + 1/60*i_*eta1^6*zeta2*
         eta2^3 - 1/60*i_*eta1^6*zeta2^3*eta2 + 3/560*i_*eta1^8*zeta2*eta2 + 1/
         5040*i_*zeta1*eta1*eta2^8 - 1/180*i_*zeta1*eta1*zeta2^2*eta2^6 + 1/72
         *i_*zeta1*eta1*zeta2^4*eta2^4 - 1/180*i_*zeta1*eta1*zeta2^6*eta2^2 + 
         1/5040*i_*zeta1*eta1*zeta2^8 + 1/180*i_*zeta1*eta1^3*eta2^6 - 1/12*i_
         *zeta1*eta1^3*zeta2^2*eta2^4 + 1/12*i_*zeta1*eta1^3*zeta2^4*eta2^2 - 
         1/180*i_*zeta1*eta1^3*zeta2^6 + 1/40*i_*zeta1*eta1^5*eta2^4 - 3/20*i_
         *zeta1*eta1^5*zeta2^2*eta2^2 + 1/40*i_*zeta1*eta1^5*zeta2^4 + 3/140*
         i_*zeta1*eta1^7*eta2^2 - 3/140*i_*zeta1*eta1^7*zeta2^2 + 1/560*i_*
         zeta1*eta1^9 - 1/1260*i_*zeta1^2*zeta2*eta2^7 + 1/180*i_*zeta1^2*
         zeta2^3*eta2^5 - 1/180*i_*zeta1^2*zeta2^5*eta2^3 + 1/1260*i_*zeta1^2*
         zeta2^7*eta2 - 1/20*i_*zeta1^2*eta1^2*zeta2*eta2^5 + 1/6*i_*zeta1^2*
         eta1^2*zeta2^3*eta2^3 - 1/20*i_*zeta1^2*eta1^2*zeta2^5*eta2 - 1/4*i_*
         zeta1^2*eta1^4*zeta2*eta2^3 + 1/4*i_*zeta1^2*eta1^4*zeta2^3*eta2 - 3/
         20*i_*zeta1^2*eta1^6*zeta2*eta2 - 1/180*i_*zeta1^3*eta1*eta2^6 + 1/12
         *i_*zeta1^3*eta1*zeta2^2*eta2^4 - 1/12*i_*zeta1^3*eta1*zeta2^4*eta2^2
          + 1/180*i_*zeta1^3*eta1*zeta2^6 - 1/12*i_*zeta1^3*eta1^3*eta2^4 + 1/
         2*i_*zeta1^3*eta1^3*zeta2^2*eta2^2 - 1/12*i_*zeta1^3*eta1^3*zeta2^4
          - 3/20*i_*zeta1^3*eta1^5*eta2^2 + 3/20*i_*zeta1^3*eta1^5*zeta2^2 - 3/
         140*i_*zeta1^3*eta1^7 + 1/120*i_*zeta1^4*zeta2*eta2^5 - 1/36*i_*
         zeta1^4*zeta2^3*eta2^3 + 1/120*i_*zeta1^4*zeta2^5*eta2 + 1/4*i_*
         zeta1^4*eta1^2*zeta2*eta2^3 - 1/4*i_*zeta1^4*eta1^2*zeta2^3*eta2 + 3/
         8*i_*zeta1^4*eta1^4*zeta2*eta2 + 1/40*i_*zeta1^5*eta1*eta2^4 - 3/20*
         i_*zeta1^5*eta1*zeta2^2*eta2^2 + 1/40*i_*zeta1^5*eta1*zeta2^4 + 3/20*
         i_*zeta1^5*eta1^3*eta2^2 - 3/20*i_*zeta1^5*eta1^3*zeta2^2 + 9/200*i_*
         zeta1^5*eta1^5 - 1/60*i_*zeta1^6*zeta2*eta2^3 + 1/60*i_*zeta1^6*
         zeta2^3*eta2 - 3/20*i_*zeta1^6*eta1^2*zeta2*eta2 - 3/140*i_*zeta1^7*
         eta1*eta2^2 + 3/140*i_*zeta1^7*eta1*zeta2^2 - 3/140*i_*zeta1^7*eta1^3
          + 3/560*i_*zeta1^8*zeta2*eta2 + 1/560*i_*zeta1^9*eta1 )

       + alpha^9 * ( 341/453600*sqrt(2)*zeta2*eta2^10 - 341/30240*sqrt(2)*
         zeta2^3*eta2^8 + 341/10800*sqrt(2)*zeta2^5*eta2^6 - 341/15120*sqrt(2)
         *zeta2^7*eta2^4 + 341/90720*sqrt(2)*zeta2^9*eta2^2 - 31/453600*sqrt(2
         )*zeta2^11 - 1/10080*sqrt(2)*eta1^2*zeta2*eta2^8 + 1/1080*sqrt(2)*
         eta1^2*zeta2^3*eta2^6 - 1/720*sqrt(2)*eta1^2*zeta2^5*eta2^4 + 1/2520*
         sqrt(2)*eta1^2*zeta2^7*eta2^2 - 1/90720*sqrt(2)*eta1^2*zeta2^9 - 1/
         720*sqrt(2)*eta1^4*zeta2*eta2^6 + 1/144*sqrt(2)*eta1^4*zeta2^3*eta2^4
          - 1/240*sqrt(2)*eta1^4*zeta2^5*eta2^2 + 1/5040*sqrt(2)*eta1^4*
         zeta2^7 - 1/240*sqrt(2)*eta1^6*zeta2*eta2^4 + 1/120*sqrt(2)*eta1^6*
         zeta2^3*eta2^2 - 1/1200*sqrt(2)*eta1^6*zeta2^5 - 3/1120*sqrt(2)*
         eta1^8*zeta2*eta2^2 + 1/1120*sqrt(2)*eta1^8*zeta2^3 - 1/5600*sqrt(2)*
         eta1^10*zeta2 - 1/45360*sqrt(2)*zeta1*eta1*eta2^9 + 1/1260*sqrt(2)*
         zeta1*eta1*zeta2^2*eta2^7 - 1/360*sqrt(2)*zeta1*eta1*zeta2^4*eta2^5
          + 1/540*sqrt(2)*zeta1*eta1*zeta2^6*eta2^3 - 1/5040*sqrt(2)*zeta1*
         eta1*zeta2^8*eta2 - 1/1260*sqrt(2)*zeta1*eta1^3*eta2^7 + 1/60*sqrt(2)
         *zeta1*eta1^3*zeta2^2*eta2^5 - 1/36*sqrt(2)*zeta1*eta1^3*zeta2^4*
         eta2^3 + 1/180*sqrt(2)*zeta1*eta1^3*zeta2^6*eta2 - 1/200*sqrt(2)*
         zeta1*eta1^5*eta2^5 + 1/20*sqrt(2)*zeta1*eta1^5*zeta2^2*eta2^3 - 1/40
         *sqrt(2)*zeta1*eta1^5*zeta2^4*eta2 - 1/140*sqrt(2)*zeta1*eta1^7*
         eta2^3 + 3/140*sqrt(2)*zeta1*eta1^7*zeta2^2*eta2 - 1/560*sqrt(2)*
         zeta1*eta1^9*eta2 + 1/10080*sqrt(2)*zeta1^2*zeta2*eta2^8 - 1/1080*
         sqrt(2)*zeta1^2*zeta2^3*eta2^6 + 1/720*sqrt(2)*zeta1^2*zeta2^5*eta2^4
          - 1/2520*sqrt(2)*zeta1^2*zeta2^7*eta2^2 + 1/90720*sqrt(2)*zeta1^2*
         zeta2^9 + 1/120*sqrt(2)*zeta1^2*eta1^2*zeta2*eta2^6 - 1/24*sqrt(2)*
         zeta1^2*eta1^2*zeta2^3*eta2^4 + 1/40*sqrt(2)*zeta1^2*eta1^2*zeta2^5*
         eta2^2 - 1/840*sqrt(2)*zeta1^2*eta1^2*zeta2^7 + 1/16*sqrt(2)*zeta1^2*
         eta1^4*zeta2*eta2^4 - 1/8*sqrt(2)*zeta1^2*eta1^4*zeta2^3*eta2^2 + 1/
         80*sqrt(2)*zeta1^2*eta1^4*zeta2^5 + 3/40*sqrt(2)*zeta1^2*eta1^6*zeta2
         *eta2^2 - 1/40*sqrt(2)*zeta1^2*eta1^6*zeta2^3 + 9/1120*sqrt(2)*
         zeta1^2*eta1^8*zeta2 + 1/1260*sqrt(2)*zeta1^3*eta1*eta2^7 - 1/60*
         sqrt(2)*zeta1^3*eta1*zeta2^2*eta2^5 + 1/36*sqrt(2)*zeta1^3*eta1*
         zeta2^4*eta2^3 - 1/180*sqrt(2)*zeta1^3*eta1*zeta2^6*eta2 + 1/60*sqrt(
         2)*zeta1^3*eta1^3*eta2^5 - 1/6*sqrt(2)*zeta1^3*eta1^3*zeta2^2*eta2^3
          + 1/12*sqrt(2)*zeta1^3*eta1^3*zeta2^4*eta2 + 1/20*sqrt(2)*zeta1^3*
         eta1^5*eta2^3 - 3/20*sqrt(2)*zeta1^3*eta1^5*zeta2^2*eta2 + 3/140*
         sqrt(2)*zeta1^3*eta1^7*eta2 - 1/720*sqrt(2)*zeta1^4*zeta2*eta2^6 + 1/
         144*sqrt(2)*zeta1^4*zeta2^3*eta2^4 - 1/240*sqrt(2)*zeta1^4*zeta2^5*
         eta2^2 + 1/5040*sqrt(2)*zeta1^4*zeta2^7 - 1/16*sqrt(2)*zeta1^4*eta1^2
         *zeta2*eta2^4 + 1/8*sqrt(2)*zeta1^4*eta1^2*zeta2^3*eta2^2 - 1/80*
         sqrt(2)*zeta1^4*eta1^2*zeta2^5 - 3/16*sqrt(2)*zeta1^4*eta1^4*zeta2*
         eta2^2 + 1/16*sqrt(2)*zeta1^4*eta1^4*zeta2^3 - 3/80*sqrt(2)*zeta1^4*
         eta1^6*zeta2 - 1/200*sqrt(2)*zeta1^5*eta1*eta2^5 + 1/20*sqrt(2)*
         zeta1^5*eta1*zeta2^2*eta2^3 - 1/40*sqrt(2)*zeta1^5*eta1*zeta2^4*eta2
          - 1/20*sqrt(2)*zeta1^5*eta1^3*eta2^3 + 3/20*sqrt(2)*zeta1^5*eta1^3*
         zeta2^2*eta2 - 9/200*sqrt(2)*zeta1^5*eta1^5*eta2 + 1/240*sqrt(2)*
         zeta1^6*zeta2*eta2^4 - 1/120*sqrt(2)*zeta1^6*zeta2^3*eta2^2 + 1/1200*
         sqrt(2)*zeta1^6*zeta2^5 + 3/40*sqrt(2)*zeta1^6*eta1^2*zeta2*eta2^2 - 
         1/40*sqrt(2)*zeta1^6*eta1^2*zeta2^3 + 3/80*sqrt(2)*zeta1^6*eta1^4*
         zeta2 + 1/140*sqrt(2)*zeta1^7*eta1*eta2^3 - 3/140*sqrt(2)*zeta1^7*
         eta1*zeta2^2*eta2 + 3/140*sqrt(2)*zeta1^7*eta1^3*eta2 - 3/1120*sqrt(2
         )*zeta1^8*zeta2*eta2^2 + 1/1120*sqrt(2)*zeta1^8*zeta2^3 - 9/1120*
         sqrt(2)*zeta1^8*eta1^2*zeta2 - 1/560*sqrt(2)*zeta1^9*eta1*eta2 + 1/
         5600*sqrt(2)*zeta1^10*zeta2 + 31/453600*sqrt(2)*i_*eta2^11 - 341/
         90720*sqrt(2)*i_*zeta2^2*eta2^9 + 341/15120*sqrt(2)*i_*zeta2^4*eta2^7
          - 341/10800*sqrt(2)*i_*zeta2^6*eta2^5 + 341/30240*sqrt(2)*i_*zeta2^8
         *eta2^3 - 341/453600*sqrt(2)*i_*zeta2^10*eta2 - 1/90720*sqrt(2)*i_*
         eta1^2*eta2^9 + 1/2520*sqrt(2)*i_*eta1^2*zeta2^2*eta2^7 - 1/720*sqrt(
         2)*i_*eta1^2*zeta2^4*eta2^5 + 1/1080*sqrt(2)*i_*eta1^2*zeta2^6*eta2^3
          - 1/10080*sqrt(2)*i_*eta1^2*zeta2^8*eta2 - 1/5040*sqrt(2)*i_*eta1^4*
         eta2^7 + 1/240*sqrt(2)*i_*eta1^4*zeta2^2*eta2^5 - 1/144*sqrt(2)*i_*
         eta1^4*zeta2^4*eta2^3 + 1/720*sqrt(2)*i_*eta1^4*zeta2^6*eta2 - 1/1200
         *sqrt(2)*i_*eta1^6*eta2^5 + 1/120*sqrt(2)*i_*eta1^6*zeta2^2*eta2^3 - 
         1/240*sqrt(2)*i_*eta1^6*zeta2^4*eta2 - 1/1120*sqrt(2)*i_*eta1^8*
         eta2^3 + 3/1120*sqrt(2)*i_*eta1^8*zeta2^2*eta2 - 1/5600*sqrt(2)*i_*
         eta1^10*eta2 + 1/5040*sqrt(2)*i_*zeta1*eta1*zeta2*eta2^8 - 1/540*
         sqrt(2)*i_*zeta1*eta1*zeta2^3*eta2^6 + 1/360*sqrt(2)*i_*zeta1*eta1*
         zeta2^5*eta2^4 - 1/1260*sqrt(2)*i_*zeta1*eta1*zeta2^7*eta2^2 + 1/
         45360*sqrt(2)*i_*zeta1*eta1*zeta2^9 + 1/180*sqrt(2)*i_*zeta1*eta1^3*
         zeta2*eta2^6 - 1/36*sqrt(2)*i_*zeta1*eta1^3*zeta2^3*eta2^4 + 1/60*
         sqrt(2)*i_*zeta1*eta1^3*zeta2^5*eta2^2 - 1/1260*sqrt(2)*i_*zeta1*
         eta1^3*zeta2^7 + 1/40*sqrt(2)*i_*zeta1*eta1^5*zeta2*eta2^4 - 1/20*
         sqrt(2)*i_*zeta1*eta1^5*zeta2^3*eta2^2 + 1/200*sqrt(2)*i_*zeta1*
         eta1^5*zeta2^5 + 3/140*sqrt(2)*i_*zeta1*eta1^7*zeta2*eta2^2 - 1/140*
         sqrt(2)*i_*zeta1*eta1^7*zeta2^3 + 1/560*sqrt(2)*i_*zeta1*eta1^9*zeta2
          + 1/90720*sqrt(2)*i_*zeta1^2*eta2^9 - 1/2520*sqrt(2)*i_*zeta1^2*
         zeta2^2*eta2^7 + 1/720*sqrt(2)*i_*zeta1^2*zeta2^4*eta2^5 - 1/1080*
         sqrt(2)*i_*zeta1^2*zeta2^6*eta2^3 + 1/10080*sqrt(2)*i_*zeta1^2*
         zeta2^8*eta2 + 1/840*sqrt(2)*i_*zeta1^2*eta1^2*eta2^7 - 1/40*sqrt(2)*
         i_*zeta1^2*eta1^2*zeta2^2*eta2^5 + 1/24*sqrt(2)*i_*zeta1^2*eta1^2*
         zeta2^4*eta2^3 - 1/120*sqrt(2)*i_*zeta1^2*eta1^2*zeta2^6*eta2 + 1/80*
         sqrt(2)*i_*zeta1^2*eta1^4*eta2^5 - 1/8*sqrt(2)*i_*zeta1^2*eta1^4*
         zeta2^2*eta2^3 + 1/16*sqrt(2)*i_*zeta1^2*eta1^4*zeta2^4*eta2 + 1/40*
         sqrt(2)*i_*zeta1^2*eta1^6*eta2^3 - 3/40*sqrt(2)*i_*zeta1^2*eta1^6*
         zeta2^2*eta2 + 9/1120*sqrt(2)*i_*zeta1^2*eta1^8*eta2 - 1/180*sqrt(2)*
         i_*zeta1^3*eta1*zeta2*eta2^6 + 1/36*sqrt(2)*i_*zeta1^3*eta1*zeta2^3*
         eta2^4 - 1/60*sqrt(2)*i_*zeta1^3*eta1*zeta2^5*eta2^2 + 1/1260*sqrt(2)
         *i_*zeta1^3*eta1*zeta2^7 - 1/12*sqrt(2)*i_*zeta1^3*eta1^3*zeta2*
         eta2^4 + 1/6*sqrt(2)*i_*zeta1^3*eta1^3*zeta2^3*eta2^2 - 1/60*sqrt(2)*
         i_*zeta1^3*eta1^3*zeta2^5 - 3/20*sqrt(2)*i_*zeta1^3*eta1^5*zeta2*
         eta2^2 + 1/20*sqrt(2)*i_*zeta1^3*eta1^5*zeta2^3 - 3/140*sqrt(2)*i_*
         zeta1^3*eta1^7*zeta2 - 1/5040*sqrt(2)*i_*zeta1^4*eta2^7 + 1/240*sqrt(
         2)*i_*zeta1^4*zeta2^2*eta2^5 - 1/144*sqrt(2)*i_*zeta1^4*zeta2^4*
         eta2^3 + 1/720*sqrt(2)*i_*zeta1^4*zeta2^6*eta2 - 1/80*sqrt(2)*i_*
         zeta1^4*eta1^2*eta2^5 + 1/8*sqrt(2)*i_*zeta1^4*eta1^2*zeta2^2*eta2^3
          - 1/16*sqrt(2)*i_*zeta1^4*eta1^2*zeta2^4*eta2 - 1/16*sqrt(2)*i_*
         zeta1^4*eta1^4*eta2^3 + 3/16*sqrt(2)*i_*zeta1^4*eta1^4*zeta2^2*eta2
          - 3/80*sqrt(2)*i_*zeta1^4*eta1^6*eta2 + 1/40*sqrt(2)*i_*zeta1^5*eta1
         *zeta2*eta2^4 - 1/20*sqrt(2)*i_*zeta1^5*eta1*zeta2^3*eta2^2 + 1/200*
         sqrt(2)*i_*zeta1^5*eta1*zeta2^5 + 3/20*sqrt(2)*i_*zeta1^5*eta1^3*
         zeta2*eta2^2 - 1/20*sqrt(2)*i_*zeta1^5*eta1^3*zeta2^3 + 9/200*sqrt(2)
         *i_*zeta1^5*eta1^5*zeta2 + 1/1200*sqrt(2)*i_*zeta1^6*eta2^5 - 1/120*
         sqrt(2)*i_*zeta1^6*zeta2^2*eta2^3 + 1/240*sqrt(2)*i_*zeta1^6*zeta2^4*
         eta2 + 1/40*sqrt(2)*i_*zeta1^6*eta1^2*eta2^3 - 3/40*sqrt(2)*i_*
         zeta1^6*eta1^2*zeta2^2*eta2 + 3/80*sqrt(2)*i_*zeta1^6*eta1^4*eta2 - 3/
         140*sqrt(2)*i_*zeta1^7*eta1*zeta2*eta2^2 + 1/140*sqrt(2)*i_*zeta1^7*
         eta1*zeta2^3 - 3/140*sqrt(2)*i_*zeta1^7*eta1^3*zeta2 - 1/1120*sqrt(2)
         *i_*zeta1^8*eta2^3 + 3/1120*sqrt(2)*i_*zeta1^8*zeta2^2*eta2 - 9/1120*
         sqrt(2)*i_*zeta1^8*eta1^2*eta2 + 1/560*sqrt(2)*i_*zeta1^9*eta1*zeta2
          + 1/5600*sqrt(2)*i_*zeta1^10*eta2 )

       + alpha^10 * ( 683/29937600*eta2^12 - 683/453600*zeta2^2*eta2^10 + 683/
         60480*zeta2^4*eta2^8 - 683/32400*zeta2^6*eta2^6 + 683/60480*zeta2^8*
         eta2^4 - 683/453600*zeta2^10*eta2^2 + 683/29937600*zeta2^12 + 1/
         453600*eta1^2*eta2^10 - 1/10080*eta1^2*zeta2^2*eta2^8 + 1/2160*eta1^2
         *zeta2^4*eta2^6 - 1/2160*eta1^2*zeta2^6*eta2^4 + 1/10080*eta1^2*
         zeta2^8*eta2^2 - 1/453600*eta1^2*zeta2^10 + 1/20160*eta1^4*eta2^8 - 1/
         720*eta1^4*zeta2^2*eta2^6 + 1/288*eta1^4*zeta2^4*eta2^4 - 1/720*
         eta1^4*zeta2^6*eta2^2 + 1/20160*eta1^4*zeta2^8 + 1/3600*eta1^6*eta2^6
          - 1/240*eta1^6*zeta2^2*eta2^4 + 1/240*eta1^6*zeta2^4*eta2^2 - 1/3600
         *eta1^6*zeta2^6 + 1/2240*eta1^8*eta2^4 - 3/1120*eta1^8*zeta2^2*eta2^2
          + 1/2240*eta1^8*zeta2^4 + 1/5600*eta1^10*eta2^2 - 1/5600*eta1^10*
         zeta2^2 + 1/123200*eta1^12 - 1/22680*zeta1*eta1*zeta2*eta2^9 + 1/1890
         *zeta1*eta1*zeta2^3*eta2^7 - 1/900*zeta1*eta1*zeta2^5*eta2^5 + 1/1890
         *zeta1*eta1*zeta2^7*eta2^3 - 1/22680*zeta1*eta1*zeta2^9*eta2 - 1/630*
         zeta1*eta1^3*zeta2*eta2^7 + 1/90*zeta1*eta1^3*zeta2^3*eta2^5 - 1/90*
         zeta1*eta1^3*zeta2^5*eta2^3 + 1/630*zeta1*eta1^3*zeta2^7*eta2 - 1/100
         *zeta1*eta1^5*zeta2*eta2^5 + 1/30*zeta1*eta1^5*zeta2^3*eta2^3 - 1/100
         *zeta1*eta1^5*zeta2^5*eta2 - 1/70*zeta1*eta1^7*zeta2*eta2^3 + 1/70*
         zeta1*eta1^7*zeta2^3*eta2 - 1/280*zeta1*eta1^9*zeta2*eta2 - 1/453600*
         zeta1^2*eta2^10 + 1/10080*zeta1^2*zeta2^2*eta2^8 - 1/2160*zeta1^2*
         zeta2^4*eta2^6 + 1/2160*zeta1^2*zeta2^6*eta2^4 - 1/10080*zeta1^2*
         zeta2^8*eta2^2 + 1/453600*zeta1^2*zeta2^10 - 1/3360*zeta1^2*eta1^2*
         eta2^8 + 1/120*zeta1^2*eta1^2*zeta2^2*eta2^6 - 1/48*zeta1^2*eta1^2*
         zeta2^4*eta2^4 + 1/120*zeta1^2*eta1^2*zeta2^6*eta2^2 - 1/3360*zeta1^2
         *eta1^2*zeta2^8 - 1/240*zeta1^2*eta1^4*eta2^6 + 1/16*zeta1^2*eta1^4*
         zeta2^2*eta2^4 - 1/16*zeta1^2*eta1^4*zeta2^4*eta2^2 + 1/240*zeta1^2*
         eta1^4*zeta2^6 - 1/80*zeta1^2*eta1^6*eta2^4 + 3/40*zeta1^2*eta1^6*
         zeta2^2*eta2^2 - 1/80*zeta1^2*eta1^6*zeta2^4 - 9/1120*zeta1^2*eta1^8*
         eta2^2 + 9/1120*zeta1^2*eta1^8*zeta2^2 - 3/5600*zeta1^2*eta1^10 + 1/
         630*zeta1^3*eta1*zeta2*eta2^7 - 1/90*zeta1^3*eta1*zeta2^3*eta2^5 + 1/
         90*zeta1^3*eta1*zeta2^5*eta2^3 - 1/630*zeta1^3*eta1*zeta2^7*eta2 + 1/
         30*zeta1^3*eta1^3*zeta2*eta2^5 - 1/9*zeta1^3*eta1^3*zeta2^3*eta2^3 + 
         1/30*zeta1^3*eta1^3*zeta2^5*eta2 + 1/10*zeta1^3*eta1^5*zeta2*eta2^3
          - 1/10*zeta1^3*eta1^5*zeta2^3*eta2 + 3/70*zeta1^3*eta1^7*zeta2*eta2
          + 1/20160*zeta1^4*eta2^8 - 1/720*zeta1^4*zeta2^2*eta2^6 + 1/288*
         zeta1^4*zeta2^4*eta2^4 - 1/720*zeta1^4*zeta2^6*eta2^2 + 1/20160*
         zeta1^4*zeta2^8 + 1/240*zeta1^4*eta1^2*eta2^6 - 1/16*zeta1^4*eta1^2*
         zeta2^2*eta2^4 + 1/16*zeta1^4*eta1^2*zeta2^4*eta2^2 - 1/240*zeta1^4*
         eta1^2*zeta2^6 + 1/32*zeta1^4*eta1^4*eta2^4 - 3/16*zeta1^4*eta1^4*
         zeta2^2*eta2^2 + 1/32*zeta1^4*eta1^4*zeta2^4 + 3/80*zeta1^4*eta1^6*
         eta2^2 - 3/80*zeta1^4*eta1^6*zeta2^2 + 9/2240*zeta1^4*eta1^8 - 1/100*
         zeta1^5*eta1*zeta2*eta2^5 + 1/30*zeta1^5*eta1*zeta2^3*eta2^3 - 1/100*
         zeta1^5*eta1*zeta2^5*eta2 - 1/10*zeta1^5*eta1^3*zeta2*eta2^3 + 1/10*
         zeta1^5*eta1^3*zeta2^3*eta2 - 9/100*zeta1^5*eta1^5*zeta2*eta2 - 1/
         3600*zeta1^6*eta2^6 + 1/240*zeta1^6*zeta2^2*eta2^4 - 1/240*zeta1^6*
         zeta2^4*eta2^2 + 1/3600*zeta1^6*zeta2^6 - 1/80*zeta1^6*eta1^2*eta2^4
          + 3/40*zeta1^6*eta1^2*zeta2^2*eta2^2 - 1/80*zeta1^6*eta1^2*zeta2^4
          - 3/80*zeta1^6*eta1^4*eta2^2 + 3/80*zeta1^6*eta1^4*zeta2^2 - 3/400*
         zeta1^6*eta1^6 + 1/70*zeta1^7*eta1*zeta2*eta2^3 - 1/70*zeta1^7*eta1*
         zeta2^3*eta2 + 3/70*zeta1^7*eta1^3*zeta2*eta2 + 1/2240*zeta1^8*eta2^4
          - 3/1120*zeta1^8*zeta2^2*eta2^2 + 1/2240*zeta1^8*zeta2^4 + 9/1120*
         zeta1^8*eta1^2*eta2^2 - 9/1120*zeta1^8*eta1^2*zeta2^2 + 9/2240*
         zeta1^8*eta1^4 - 1/280*zeta1^9*eta1*zeta2*eta2 - 1/5600*zeta1^10*
         eta2^2 + 1/5600*zeta1^10*zeta2^2 - 3/5600*zeta1^10*eta1^2 + 1/123200*
         zeta1^12 - 683/2494800*i_*zeta2*eta2^11 + 683/136080*i_*zeta2^3*
         eta2^9 - 683/37800*i_*zeta2^5*eta2^7 + 683/37800*i_*zeta2^7*eta2^5 - 
         683/136080*i_*zeta2^9*eta2^3 + 683/2494800*i_*zeta2^11*eta2 - 1/45360
         *i_*eta1^2*zeta2*eta2^9 + 1/3780*i_*eta1^2*zeta2^3*eta2^7 - 1/1800*i_
         *eta1^2*zeta2^5*eta2^5 + 1/3780*i_*eta1^2*zeta2^7*eta2^3 - 1/45360*i_
         *eta1^2*zeta2^9*eta2 - 1/2520*i_*eta1^4*zeta2*eta2^7 + 1/360*i_*
         eta1^4*zeta2^3*eta2^5 - 1/360*i_*eta1^4*zeta2^5*eta2^3 + 1/2520*i_*
         eta1^4*zeta2^7*eta2 - 1/600*i_*eta1^6*zeta2*eta2^5 + 1/180*i_*eta1^6*
         zeta2^3*eta2^3 - 1/600*i_*eta1^6*zeta2^5*eta2 - 1/560*i_*eta1^8*zeta2
         *eta2^3 + 1/560*i_*eta1^8*zeta2^3*eta2 - 1/2800*i_*eta1^10*zeta2*eta2
          - 1/226800*i_*zeta1*eta1*eta2^10 + 1/5040*i_*zeta1*eta1*zeta2^2*
         eta2^8 - 1/1080*i_*zeta1*eta1*zeta2^4*eta2^6 + 1/1080*i_*zeta1*eta1*
         zeta2^6*eta2^4 - 1/5040*i_*zeta1*eta1*zeta2^8*eta2^2 + 1/226800*i_*
         zeta1*eta1*zeta2^10 - 1/5040*i_*zeta1*eta1^3*eta2^8 + 1/180*i_*zeta1*
         eta1^3*zeta2^2*eta2^6 - 1/72*i_*zeta1*eta1^3*zeta2^4*eta2^4 + 1/180*
         i_*zeta1*eta1^3*zeta2^6*eta2^2 - 1/5040*i_*zeta1*eta1^3*zeta2^8 - 1/
         600*i_*zeta1*eta1^5*eta2^6 + 1/40*i_*zeta1*eta1^5*zeta2^2*eta2^4 - 1/
         40*i_*zeta1*eta1^5*zeta2^4*eta2^2 + 1/600*i_*zeta1*eta1^5*zeta2^6 - 1/
         280*i_*zeta1*eta1^7*eta2^4 + 3/140*i_*zeta1*eta1^7*zeta2^2*eta2^2 - 1/
         280*i_*zeta1*eta1^7*zeta2^4 - 1/560*i_*zeta1*eta1^9*eta2^2 + 1/560*i_
         *zeta1*eta1^9*zeta2^2 - 3/30800*i_*zeta1*eta1^11 + 1/45360*i_*zeta1^2
         *zeta2*eta2^9 - 1/3780*i_*zeta1^2*zeta2^3*eta2^7 + 1/1800*i_*zeta1^2*
         zeta2^5*eta2^5 - 1/3780*i_*zeta1^2*zeta2^7*eta2^3 + 1/45360*i_*
         zeta1^2*zeta2^9*eta2 + 1/420*i_*zeta1^2*eta1^2*zeta2*eta2^7 - 1/60*i_
         *zeta1^2*eta1^2*zeta2^3*eta2^5 + 1/60*i_*zeta1^2*eta1^2*zeta2^5*
         eta2^3 - 1/420*i_*zeta1^2*eta1^2*zeta2^7*eta2 + 1/40*i_*zeta1^2*
         eta1^4*zeta2*eta2^5 - 1/12*i_*zeta1^2*eta1^4*zeta2^3*eta2^3 + 1/40*i_
         *zeta1^2*eta1^4*zeta2^5*eta2 + 1/20*i_*zeta1^2*eta1^6*zeta2*eta2^3 - 
         1/20*i_*zeta1^2*eta1^6*zeta2^3*eta2 + 9/560*i_*zeta1^2*eta1^8*zeta2*
         eta2 + 1/5040*i_*zeta1^3*eta1*eta2^8 - 1/180*i_*zeta1^3*eta1*zeta2^2*
         eta2^6 + 1/72*i_*zeta1^3*eta1*zeta2^4*eta2^4 - 1/180*i_*zeta1^3*eta1*
         zeta2^6*eta2^2 + 1/5040*i_*zeta1^3*eta1*zeta2^8 + 1/180*i_*zeta1^3*
         eta1^3*eta2^6 - 1/12*i_*zeta1^3*eta1^3*zeta2^2*eta2^4 + 1/12*i_*
         zeta1^3*eta1^3*zeta2^4*eta2^2 - 1/180*i_*zeta1^3*eta1^3*zeta2^6 + 1/
         40*i_*zeta1^3*eta1^5*eta2^4 - 3/20*i_*zeta1^3*eta1^5*zeta2^2*eta2^2
          + 1/40*i_*zeta1^3*eta1^5*zeta2^4 + 3/140*i_*zeta1^3*eta1^7*eta2^2 - 
         3/140*i_*zeta1^3*eta1^7*zeta2^2 + 1/560*i_*zeta1^3*eta1^9 - 1/2520*i_
         *zeta1^4*zeta2*eta2^7 + 1/360*i_*zeta1^4*zeta2^3*eta2^5 - 1/360*i_*
         zeta1^4*zeta2^5*eta2^3 + 1/2520*i_*zeta1^4*zeta2^7*eta2 - 1/40*i_*
         zeta1^4*eta1^2*zeta2*eta2^5 + 1/12*i_*zeta1^4*eta1^2*zeta2^3*eta2^3
          - 1/40*i_*zeta1^4*eta1^2*zeta2^5*eta2 - 1/8*i_*zeta1^4*eta1^4*zeta2*
         eta2^3 + 1/8*i_*zeta1^4*eta1^4*zeta2^3*eta2 - 3/40*i_*zeta1^4*eta1^6*
         zeta2*eta2 - 1/600*i_*zeta1^5*eta1*eta2^6 + 1/40*i_*zeta1^5*eta1*
         zeta2^2*eta2^4 - 1/40*i_*zeta1^5*eta1*zeta2^4*eta2^2 + 1/600*i_*
         zeta1^5*eta1*zeta2^6 - 1/40*i_*zeta1^5*eta1^3*eta2^4 + 3/20*i_*
         zeta1^5*eta1^3*zeta2^2*eta2^2 - 1/40*i_*zeta1^5*eta1^3*zeta2^4 - 9/
         200*i_*zeta1^5*eta1^5*eta2^2 + 9/200*i_*zeta1^5*eta1^5*zeta2^2 - 9/
         1400*i_*zeta1^5*eta1^7 + 1/600*i_*zeta1^6*zeta2*eta2^5 - 1/180*i_*
         zeta1^6*zeta2^3*eta2^3 + 1/600*i_*zeta1^6*zeta2^5*eta2 + 1/20*i_*
         zeta1^6*eta1^2*zeta2*eta2^3 - 1/20*i_*zeta1^6*eta1^2*zeta2^3*eta2 + 3/
         40*i_*zeta1^6*eta1^4*zeta2*eta2 + 1/280*i_*zeta1^7*eta1*eta2^4 - 3/
         140*i_*zeta1^7*eta1*zeta2^2*eta2^2 + 1/280*i_*zeta1^7*eta1*zeta2^4 + 
         3/140*i_*zeta1^7*eta1^3*eta2^2 - 3/140*i_*zeta1^7*eta1^3*zeta2^2 + 9/
         1400*i_*zeta1^7*eta1^5 - 1/560*i_*zeta1^8*zeta2*eta2^3 + 1/560*i_*
         zeta1^8*zeta2^3*eta2 - 9/560*i_*zeta1^8*eta1^2*zeta2*eta2 - 1/560*i_*
         zeta1^9*eta1*eta2^2 + 1/560*i_*zeta1^9*eta1*zeta2^2 - 1/560*i_*
         zeta1^9*eta1^3 + 1/2800*i_*zeta1^10*zeta2*eta2 + 3/30800*i_*zeta1^11*
         eta1 )

       + i_*zeta2*eta2 + i_*zeta1*eta1;

    *-------------------- 
    *	The unperturbed part is as follows:
    *-------------------- 
    Global H0 = Hetazeta[alpha^0];
    Print;
    .store

   H0 =
      i_*zeta2*eta2 + i_*zeta1*eta1;

    *------------------------------------------------------------------------------ 
    *     1. The explicit expression for the generator: 
    *        Nikolaev A.S., arXiv:1612.05207
    *------------------------------------------------------------------------------ 
    #call W(e)

Time =      16.58 sec    Generated terms =       6776
             eSH         Terms in output =        884
                         Bytes used      =      20974
    Global W = eSH;
    .store
    *--------------------
    *         The transformed Hamiltonian U_W H:
    *--------------------
    #call U(W,Hetazeta,e)

Time =      17.31 sec    Generated terms =         71
            eU10         Terms in output =         71
                         Bytes used      =       1772
    .store
    Global HtExplicit=eU'MAXORDER';
    .store
    *--------------------
    *        The Gustavson-Hori integral U_G^-1 H0 :
    *--------------------
    #call Uinverse(W,H0,ei)

Time =      17.62 sec    Generated terms =        917
        eiUinv10         Terms in output =        917
                         Bytes used      =      21486
    G IGH0Explicit= eiUinv'MAXORDER';
    .store
    *------------------------------------------------------------------------------ 
    *     2. The Henrard normalisation.
    *     Henrard, J., in "Recent advances in dynamical astronomy" ed. Szebehely, p.
     248	
    *     Algorithm by Koseleff PV (1994), Cel. Mech. 58:17-36
    *------------------------------------------------------------------------------ 
    #call HenrardNormalization(hk)
    Global HtHenrard=hkHt'MAXORDER';
    .store
    #call HenrardInverse(hkW'MAXORDER',H0,hki)

Time =      21.16 sec    Generated terms =        917
       hkiHinv10         Terms in output =        917
                         Bytes used      =      21486
    Global IGH0Henrard= hkiHinv'MAXORDER';
    .store
    *------------------------------------------------------------------------------ 
    *     The comparison of the Explicit and Henrard normalisations.
    *------------------------------------------------------------------------------ 
    *      1) The Gustavson integrals are identical:
    *-----------------
    write statistics;
    Local dGustavsonIntegrals=IGH0Henrard-IGH0Explicit;
    B alpha;
    Print;
    .store

Time =      21.16 sec    Generated terms =       1834
stavsonIntegrals         Terms in output =          0
                         Bytes used      =          2

   dGustavsonIntegrals = 0;

    *      2) The Hamiltonians normalised by the Henrard and Explicit methods are id
    entical:
    *-----------------
    write statistics;
    Local dHtExplicitvsHenrard=HtHenrard-HtExplicit;
    B alpha;
    Print;
    .store

Time =      21.16 sec    Generated terms =        142
xplicitvsHenrard         Terms in output =          0
                         Bytes used      =          2

   dHtExplicitvsHenrard = 0;

    *------------------------------------------------------------------------------ 
    *     3. The Deprit triangular normalisation. 
    *        Deprit A (1969), Celestial Mech 1:12–30 
    *------------------------------------------------------------------------------ 
    #call Deprit3Normalization(dt)

Time =      22.44 sec    Generated terms =        846
             dtW         Terms in output =        846
                         Bytes used      =      20218

Time =      22.44 sec    Generated terms =         71
          dtHt10         Terms in output =         71
                         Bytes used      =       1800
    Global HtDeprit3=dtHt'MAXORDER';
    .store
    #call Deprit3Inverse(dtW,H0,dti)

Time =      23.25 sec    Generated terms =        917
       dtiUinv10         Terms in output =        917
                         Bytes used      =      21486
    Global IGH0Deprit3=dtiUinv'MAXORDER'; 
    .store
    *      1) The Gustavson integrals are identical:
    *-----------------
    write statistics;
    Local dGustavsonIntegrals=IGH0Henrard-IGH0Deprit3;
    B alpha;
    Print;
    .store

Time =      23.25 sec    Generated terms =       1834
stavsonIntegrals         Terms in output =          0
                         Bytes used      =          2

   dGustavsonIntegrals = 0;

    *-------------------- 
    *     2) The normalised Hamiltonians differ starting from the 8th order:
    *-------------------- 
    Local dHtDeprit3vsHenrard=HtHenrard-HtDeprit3;
    B alpha;
    Print;
    .store

   dHtDeprit3vsHenrard =
       + alpha^8 * (  - 1283/486*i_*eta1^2*zeta2^5*eta2^3 + 1283/162*i_*eta1^4
         *zeta2^5*eta2 + 1283/243*i_*zeta1*eta1*zeta2^4*eta2^4 + 1283/162*i_*
         zeta1*eta1^3*zeta2^4*eta2^2 - 1283/162*i_*zeta1*eta1^5*zeta2^4 - 1283/
         486*i_*zeta1^2*zeta2^3*eta2^5 - 2566/81*i_*zeta1^2*eta1^2*zeta2^3*
         eta2^3 - 1283/162*i_*zeta1^2*eta1^4*zeta2^3*eta2 + 1283/162*i_*
         zeta1^3*eta1*zeta2^2*eta2^4 + 2566/81*i_*zeta1^3*eta1^3*zeta2^2*
         eta2^2 + 1283/486*i_*zeta1^3*eta1^5*zeta2^2 + 1283/162*i_*zeta1^4*
         zeta2*eta2^5 - 1283/162*i_*zeta1^4*eta1^2*zeta2*eta2^3 - 1283/243*i_*
         zeta1^4*eta1^4*zeta2*eta2 - 1283/162*i_*zeta1^5*eta1*eta2^4 + 1283/
         486*i_*zeta1^5*eta1^3*eta2^2 )

       + alpha^10 * (  - 1979399/58320*eta1^2*zeta2^6*eta2^4 + 1979399/19440*
         eta1^4*zeta2^6*eta2^2 + 1979399/29160*zeta1*eta1*zeta2^5*eta2^5 + 
         1979399/29160*zeta1*eta1^3*zeta2^5*eta2^3 - 1979399/58320*zeta1^2*
         zeta2^4*eta2^6 - 1979399/5832*zeta1^2*eta1^2*zeta2^4*eta2^4 - 1979399/
         19440*zeta1^2*eta1^6*zeta2^4 + 1979399/29160*zeta1^3*eta1*zeta2^3*
         eta2^5 - 1979399/29160*zeta1^3*eta1^5*zeta2^3*eta2 + 1979399/19440*
         zeta1^4*zeta2^2*eta2^6 + 1979399/5832*zeta1^4*eta1^4*zeta2^2*eta2^2
          + 1979399/58320*zeta1^4*eta1^6*zeta2^2 - 1979399/29160*zeta1^5*
         eta1^3*zeta2*eta2^3 - 1979399/29160*zeta1^5*eta1^5*zeta2*eta2 - 
         1979399/19440*zeta1^6*eta1^2*eta2^4 + 1979399/58320*zeta1^6*eta1^4*
         eta2^2 );

    *------------------------------------------------------------------------------ 
    *     4. The Hori normalisation. 
    *       Hori G (1966), Publ Astron Soc Japan 18:287
    *       Algorithm by Mersman W.A., Celest. Mech. 3 (1970) 81–89.
    *------------------------------------------------------------------------------ 
    #call HoriMersmanNormalization(hm)
    Global HtHori=hmHt'MAXORDER';
    .store
    #call HoriMersmanInverse(hmG'MAXORDER',H0,h)

Time =      27.30 sec    Generated terms =        917
        hHMinv10         Terms in output =        917
                         Bytes used      =      21486
    Global IGH0Hori=hHMinv'MAXORDER'; 
    .store
    *      1) The Gustavson integrals are identical:
    *-----------------
    write statistics;
    Local dGustavsonIntegrals=IGH0Hori-IGH0Deprit3;
    B alpha;
    Print;
    .store

Time =      27.31 sec    Generated terms =       1834
stavsonIntegrals         Terms in output =          0
                         Bytes used      =          2

   dGustavsonIntegrals = 0;

    *-------------------- 
    *     3) The normalised Hamiltonians differ starting from the 8th order:
    *-------------------- 
    Local dHtHorivsDeprit3=HtHori-HtDeprit3;
    Local dHtHorivsHenrard=HtHori-HtHenrard;
    B alpha;
    Print;
    .store

   dHtHorivsDeprit3 =
       + alpha^8 * (  - 4351/3240*i_*eta1^2*zeta2^5*eta2^3 + 4351/1080*i_*
         eta1^4*zeta2^5*eta2 + 4351/1620*i_*zeta1*eta1*zeta2^4*eta2^4 + 4351/
         1080*i_*zeta1*eta1^3*zeta2^4*eta2^2 - 4351/1080*i_*zeta1*eta1^5*
         zeta2^4 - 4351/3240*i_*zeta1^2*zeta2^3*eta2^5 - 4351/270*i_*zeta1^2*
         eta1^2*zeta2^3*eta2^3 - 4351/1080*i_*zeta1^2*eta1^4*zeta2^3*eta2 + 
         4351/1080*i_*zeta1^3*eta1*zeta2^2*eta2^4 + 4351/270*i_*zeta1^3*eta1^3
         *zeta2^2*eta2^2 + 4351/3240*i_*zeta1^3*eta1^5*zeta2^2 + 4351/1080*i_*
         zeta1^4*zeta2*eta2^5 - 4351/1080*i_*zeta1^4*eta1^2*zeta2*eta2^3 - 
         4351/1620*i_*zeta1^4*eta1^4*zeta2*eta2 - 4351/1080*i_*zeta1^5*eta1*
         eta2^4 + 4351/3240*i_*zeta1^5*eta1^3*eta2^2 )

       + alpha^10 * (  - 1654483/90720*eta1^2*zeta2^6*eta2^4 + 1654483/30240*
         eta1^4*zeta2^6*eta2^2 + 1654483/45360*zeta1*eta1*zeta2^5*eta2^5 + 
         1654483/45360*zeta1*eta1^3*zeta2^5*eta2^3 - 1654483/90720*zeta1^2*
         zeta2^4*eta2^6 - 1654483/9072*zeta1^2*eta1^2*zeta2^4*eta2^4 - 1654483/
         30240*zeta1^2*eta1^6*zeta2^4 + 1654483/45360*zeta1^3*eta1*zeta2^3*
         eta2^5 - 1654483/45360*zeta1^3*eta1^5*zeta2^3*eta2 + 1654483/30240*
         zeta1^4*zeta2^2*eta2^6 + 1654483/9072*zeta1^4*eta1^4*zeta2^2*eta2^2
          + 1654483/90720*zeta1^4*eta1^6*zeta2^2 - 1654483/45360*zeta1^5*
         eta1^3*zeta2*eta2^3 - 1654483/45360*zeta1^5*eta1^5*zeta2*eta2 - 
         1654483/30240*zeta1^6*eta1^2*eta2^4 + 1654483/90720*zeta1^6*eta1^4*
         eta2^2 );

   dHtHorivsHenrard =
       + alpha^8 * ( 12607/9720*i_*eta1^2*zeta2^5*eta2^3 - 12607/3240*i_*
         eta1^4*zeta2^5*eta2 - 12607/4860*i_*zeta1*eta1*zeta2^4*eta2^4 - 12607/
         3240*i_*zeta1*eta1^3*zeta2^4*eta2^2 + 12607/3240*i_*zeta1*eta1^5*
         zeta2^4 + 12607/9720*i_*zeta1^2*zeta2^3*eta2^5 + 12607/810*i_*zeta1^2
         *eta1^2*zeta2^3*eta2^3 + 12607/3240*i_*zeta1^2*eta1^4*zeta2^3*eta2 - 
         12607/3240*i_*zeta1^3*eta1*zeta2^2*eta2^4 - 12607/810*i_*zeta1^3*
         eta1^3*zeta2^2*eta2^2 - 12607/9720*i_*zeta1^3*eta1^5*zeta2^2 - 12607/
         3240*i_*zeta1^4*zeta2*eta2^5 + 12607/3240*i_*zeta1^4*eta1^2*zeta2*
         eta2^3 + 12607/4860*i_*zeta1^4*eta1^4*zeta2*eta2 + 12607/3240*i_*
         zeta1^5*eta1*eta2^4 - 12607/9720*i_*zeta1^5*eta1^3*eta2^2 )

       + alpha^10 * ( 12821239/816480*eta1^2*zeta2^6*eta2^4 - 12821239/272160*
         eta1^4*zeta2^6*eta2^2 - 12821239/408240*zeta1*eta1*zeta2^5*eta2^5 - 
         12821239/408240*zeta1*eta1^3*zeta2^5*eta2^3 + 12821239/816480*zeta1^2
         *zeta2^4*eta2^6 + 12821239/81648*zeta1^2*eta1^2*zeta2^4*eta2^4 + 
         12821239/272160*zeta1^2*eta1^6*zeta2^4 - 12821239/408240*zeta1^3*eta1
         *zeta2^3*eta2^5 + 12821239/408240*zeta1^3*eta1^5*zeta2^3*eta2 - 
         12821239/272160*zeta1^4*zeta2^2*eta2^6 - 12821239/81648*zeta1^4*
         eta1^4*zeta2^2*eta2^2 - 12821239/816480*zeta1^4*eta1^6*zeta2^2 + 
         12821239/408240*zeta1^5*eta1^3*zeta2*eta2^3 + 12821239/408240*zeta1^5
         *eta1^5*zeta2*eta2 + 12821239/272160*zeta1^6*eta1^2*eta2^4 - 12821239/
         816480*zeta1^6*eta1^4*eta2^2 );

    *------------------------------------------------------------------------------ 
    *     5. The Dragt-Finn normalisation. 
    *       Dragt AJ, Finn JM (1976), J. Math. Phys. 17:2215–2227
    *       Algorithm by Koseleff PV (1994), Cel. Mech. 58:17–36.
    *------------------------------------------------------------------------------ 
    #call DragtFinnNormalization(df)

Time =      28.29 sec    Generated terms =        846
           dfG10         Terms in output =        846
                         Bytes used      =      20658

Time =      28.29 sec    Generated terms =         71
          dfHt10         Terms in output =         71
                         Bytes used      =       1796
    Global HtDragtFinn=dfHt'MAXORDER';
    .store
    #call DragtFinnInverse(dfG'MAXORDER',H0,dfi)

Time =      29.10 sec    Generated terms =        917
      dfiDFinv10         Terms in output =        917
                         Bytes used      =      21486
    Global IGH0DragtFinn=dfiDFinv'MAXORDER';
    .store
    *      1) The Gustavson integrals are identical:
    *-----------------
    write statistics;
    Local dGustavsonIntegrals=IGH0DragtFinn-IGH0Deprit3;
    B alpha;
    Print;
    .store

Time =      29.10 sec    Generated terms =       1834
stavsonIntegrals         Terms in output =          0
                         Bytes used      =          2

   dGustavsonIntegrals = 0;

    *-------------------- 
    *     3) The normalised Hamiltonians differ starting from the 8th order:
    *-------------------- 
    Local dHtDragtFinnvsDeprit3=HtDragtFinn-HtDeprit3;
    Local dHtDragtFinnvsHenrard=HtDragtFinn-HtHenrard;
    Local dHtDragtFinnvsHori   =HtDragtFinn-HtHori;
    B alpha;
    Print;
    .store

   dHtDragtFinnvsDeprit3 =
       + alpha^8 * (  - 284/81*i_*eta1^2*zeta2^5*eta2^3 + 284/27*i_*eta1^4*
         zeta2^5*eta2 + 568/81*i_*zeta1*eta1*zeta2^4*eta2^4 + 284/27*i_*zeta1*
         eta1^3*zeta2^4*eta2^2 - 284/27*i_*zeta1*eta1^5*zeta2^4 - 284/81*i_*
         zeta1^2*zeta2^3*eta2^5 - 1136/27*i_*zeta1^2*eta1^2*zeta2^3*eta2^3 - 
         284/27*i_*zeta1^2*eta1^4*zeta2^3*eta2 + 284/27*i_*zeta1^3*eta1*
         zeta2^2*eta2^4 + 1136/27*i_*zeta1^3*eta1^3*zeta2^2*eta2^2 + 284/81*i_
         *zeta1^3*eta1^5*zeta2^2 + 284/27*i_*zeta1^4*zeta2*eta2^5 - 284/27*i_*
         zeta1^4*eta1^2*zeta2*eta2^3 - 568/81*i_*zeta1^4*eta1^4*zeta2*eta2 - 
         284/27*i_*zeta1^5*eta1*eta2^4 + 284/81*i_*zeta1^5*eta1^3*eta2^2 )

       + alpha^10 * (  - 1502525/34992*eta1^2*zeta2^6*eta2^4 + 1502525/11664*
         eta1^4*zeta2^6*eta2^2 + 1502525/17496*zeta1*eta1*zeta2^5*eta2^5 + 
         1502525/17496*zeta1*eta1^3*zeta2^5*eta2^3 - 1502525/34992*zeta1^2*
         zeta2^4*eta2^6 - 7512625/17496*zeta1^2*eta1^2*zeta2^4*eta2^4 - 
         1502525/11664*zeta1^2*eta1^6*zeta2^4 + 1502525/17496*zeta1^3*eta1*
         zeta2^3*eta2^5 - 1502525/17496*zeta1^3*eta1^5*zeta2^3*eta2 + 1502525/
         11664*zeta1^4*zeta2^2*eta2^6 + 7512625/17496*zeta1^4*eta1^4*zeta2^2*
         eta2^2 + 1502525/34992*zeta1^4*eta1^6*zeta2^2 - 1502525/17496*zeta1^5
         *eta1^3*zeta2*eta2^3 - 1502525/17496*zeta1^5*eta1^5*zeta2*eta2 - 
         1502525/11664*zeta1^6*eta1^2*eta2^4 + 1502525/34992*zeta1^6*eta1^4*
         eta2^2 );

   dHtDragtFinnvsHenrard =
       + alpha^8 * (  - 421/486*i_*eta1^2*zeta2^5*eta2^3 + 421/162*i_*eta1^4*
         zeta2^5*eta2 + 421/243*i_*zeta1*eta1*zeta2^4*eta2^4 + 421/162*i_*
         zeta1*eta1^3*zeta2^4*eta2^2 - 421/162*i_*zeta1*eta1^5*zeta2^4 - 421/
         486*i_*zeta1^2*zeta2^3*eta2^5 - 842/81*i_*zeta1^2*eta1^2*zeta2^3*
         eta2^3 - 421/162*i_*zeta1^2*eta1^4*zeta2^3*eta2 + 421/162*i_*zeta1^3*
         eta1*zeta2^2*eta2^4 + 842/81*i_*zeta1^3*eta1^3*zeta2^2*eta2^2 + 421/
         486*i_*zeta1^3*eta1^5*zeta2^2 + 421/162*i_*zeta1^4*zeta2*eta2^5 - 421/
         162*i_*zeta1^4*eta1^2*zeta2*eta2^3 - 421/243*i_*zeta1^4*eta1^4*zeta2*
         eta2 - 421/162*i_*zeta1^5*eta1*eta2^4 + 421/486*i_*zeta1^5*eta1^3*
         eta2^2 )

       + alpha^10 * (  - 393607/43740*eta1^2*zeta2^6*eta2^4 + 393607/14580*
         eta1^4*zeta2^6*eta2^2 + 393607/21870*zeta1*eta1*zeta2^5*eta2^5 + 
         393607/21870*zeta1*eta1^3*zeta2^5*eta2^3 - 393607/43740*zeta1^2*
         zeta2^4*eta2^6 - 393607/4374*zeta1^2*eta1^2*zeta2^4*eta2^4 - 393607/
         14580*zeta1^2*eta1^6*zeta2^4 + 393607/21870*zeta1^3*eta1*zeta2^3*
         eta2^5 - 393607/21870*zeta1^3*eta1^5*zeta2^3*eta2 + 393607/14580*
         zeta1^4*zeta2^2*eta2^6 + 393607/4374*zeta1^4*eta1^4*zeta2^2*eta2^2 + 
         393607/43740*zeta1^4*eta1^6*zeta2^2 - 393607/21870*zeta1^5*eta1^3*
         zeta2*eta2^3 - 393607/21870*zeta1^5*eta1^5*zeta2*eta2 - 393607/14580*
         zeta1^6*eta1^2*eta2^4 + 393607/43740*zeta1^6*eta1^4*eta2^2 );

   dHtDragtFinnvsHori =
       + alpha^8 * (  - 7009/3240*i_*eta1^2*zeta2^5*eta2^3 + 7009/1080*i_*
         eta1^4*zeta2^5*eta2 + 7009/1620*i_*zeta1*eta1*zeta2^4*eta2^4 + 7009/
         1080*i_*zeta1*eta1^3*zeta2^4*eta2^2 - 7009/1080*i_*zeta1*eta1^5*
         zeta2^4 - 7009/3240*i_*zeta1^2*zeta2^3*eta2^5 - 7009/270*i_*zeta1^2*
         eta1^2*zeta2^3*eta2^3 - 7009/1080*i_*zeta1^2*eta1^4*zeta2^3*eta2 + 
         7009/1080*i_*zeta1^3*eta1*zeta2^2*eta2^4 + 7009/270*i_*zeta1^3*eta1^3
         *zeta2^2*eta2^2 + 7009/3240*i_*zeta1^3*eta1^5*zeta2^2 + 7009/1080*i_*
         zeta1^4*zeta2*eta2^5 - 7009/1080*i_*zeta1^4*eta1^2*zeta2*eta2^3 - 
         7009/1620*i_*zeta1^4*eta1^4*zeta2*eta2 - 7009/1080*i_*zeta1^5*eta1*
         eta2^4 + 7009/3240*i_*zeta1^5*eta1^3*eta2^2 )

       + alpha^10 * (  - 60505709/2449440*eta1^2*zeta2^6*eta2^4 + 60505709/
         816480*eta1^4*zeta2^6*eta2^2 + 60505709/1224720*zeta1*eta1*zeta2^5*
         eta2^5 + 60505709/1224720*zeta1*eta1^3*zeta2^5*eta2^3 - 60505709/
         2449440*zeta1^2*zeta2^4*eta2^6 - 60505709/244944*zeta1^2*eta1^2*
         zeta2^4*eta2^4 - 60505709/816480*zeta1^2*eta1^6*zeta2^4 + 60505709/
         1224720*zeta1^3*eta1*zeta2^3*eta2^5 - 60505709/1224720*zeta1^3*eta1^5
         *zeta2^3*eta2 + 60505709/816480*zeta1^4*zeta2^2*eta2^6 + 60505709/
         244944*zeta1^4*eta1^4*zeta2^2*eta2^2 + 60505709/2449440*zeta1^4*
         eta1^6*zeta2^2 - 60505709/1224720*zeta1^5*eta1^3*zeta2*eta2^3 - 
         60505709/1224720*zeta1^5*eta1^5*zeta2*eta2 - 60505709/816480*zeta1^6*
         eta1^2*eta2^4 + 60505709/2449440*zeta1^6*eta1^4*eta2^2 );

    *------------------------------------------------------------------------------ 
    *     6. The Gustavson normalisation. 
    *       Gustavson FG (1966), Astron J 71:670
    *------------------------------------------------------------------------------ 
    #call GustavsonNormalization2d(g)

Time =      31.26 sec    Generated terms =        846
            gG10         Terms in output =        846
                         Bytes used      =      21158

Time =      31.26 sec    Generated terms =         71
           gHt10         Terms in output =         71
                         Bytes used      =       1832
    Global HtGustavson=gHt'MAXORDER';
    .store
    #call GustavsonInverse(gG'MAXORDER',H0,gh)

Time =     137.32 sec    Generated terms =        917
        ghGinv10         Terms in output =        917
                         Bytes used      =      21486
    Global IGH0Gustavson=ghGinv'MAXORDER';
    .store
    *      1) The Gustavson integrals are identical:
    *-----------------
    write statistics;
    Local dGustavsonIntegrals=IGH0Gustavson-IGH0Deprit3;
    B alpha;
    Print;
    .store

Time =     137.32 sec    Generated terms =       1834
stavsonIntegrals         Terms in output =          0
                         Bytes used      =          2

   dGustavsonIntegrals = 0;

    *-------------------- 
    *     3) The normalised Hamiltonians differ starting from the 8th order:
    *-------------------- 
    Local dHtGustavsonvsDeprit3  =HtGustavson-HtDeprit3;
    Local dHtGustavsonvsHenrard  =HtGustavson-HtHenrard;
    Local dHtGustavsonvsHori     =HtGustavson-HtHori;
    Local dHtGustavsonvsDragtFinn=HtGustavson-HtDragtFinn;
    B alpha;
    Print;
    .store

   dHtGustavsonvsDeprit3 =
       + alpha^6 * ( 1/12*eta1^2*zeta2^4*eta2^2 - 1/36*eta1^4*zeta2^4 - 2/9*
         zeta1*eta1^3*zeta2^3*eta2 - 1/12*zeta1^2*zeta2^2*eta2^4 + 1/12*
         zeta1^2*eta1^4*zeta2^2 + 2/9*zeta1^3*eta1*zeta2*eta2^3 + 1/36*zeta1^4
         *eta2^4 - 1/12*zeta1^4*eta1^2*eta2^2 )

       + alpha^8 * (  - 3347/1944*i_*eta1^2*zeta2^5*eta2^3 + 1817/216*i_*
         eta1^4*zeta2^5*eta2 + 2857/486*i_*zeta1*eta1*zeta2^4*eta2^4 + 4399/
         648*i_*zeta1*eta1^3*zeta2^4*eta2^2 - 5977/648*i_*zeta1*eta1^5*zeta2^4
          - 8081/1944*i_*zeta1^2*zeta2^3*eta2^5 - 2857/81*i_*zeta1^2*eta1^2*
         zeta2^3*eta2^3 - 781/72*i_*zeta1^2*eta1^4*zeta2^3*eta2 + 781/72*i_*
         zeta1^3*eta1*zeta2^2*eta2^4 + 2857/81*i_*zeta1^3*eta1^3*zeta2^2*
         eta2^2 + 8081/1944*i_*zeta1^3*eta1^5*zeta2^2 + 5977/648*i_*zeta1^4*
         zeta2*eta2^5 - 4399/648*i_*zeta1^4*eta1^2*zeta2*eta2^3 - 2857/486*i_*
         zeta1^4*eta1^4*zeta2*eta2 - 1817/216*i_*zeta1^5*eta1*eta2^4 + 3347/
         1944*i_*zeta1^5*eta1^3*eta2^2 )

       + alpha^10 * (  - 42394351/933120*eta1^2*zeta2^6*eta2^4 + 66346099/
         466560*eta1^4*zeta2^6*eta2^2 - 2246347/933120*eta1^6*zeta2^6 + 
         2096657/23328*zeta1*eta1*zeta2^5*eta2^5 + 2943493/38880*zeta1*eta1^3*
         zeta2^5*eta2^3 - 823163/58320*zeta1*eta1^5*zeta2^5*eta2 - 41452489/
         933120*zeta1^2*zeta2^4*eta2^6 - 10483771/23328*zeta1^2*eta1^2*zeta2^4
         *eta2^4 + 7073731/186624*zeta1^2*eta1^4*zeta2^4*eta2^2 - 59443601/
         466560*zeta1^2*eta1^6*zeta2^4 + 12124751/116640*zeta1^3*eta1*zeta2^3*
         eta2^5 + 11/108*zeta1^3*eta1^3*zeta2^3*eta2^3 - 12134471/116640*
         zeta1^3*eta1^5*zeta2^3*eta2 + 59443601/466560*zeta1^4*zeta2^2*eta2^6
          - 7045219/186624*zeta1^4*eta1^2*zeta2^2*eta2^4 + 10481179/23328*
         zeta1^4*eta1^4*zeta2^2*eta2^2 + 41465449/933120*zeta1^4*eta1^6*
         zeta2^2 + 823973/58320*zeta1^5*eta1*zeta2*eta2^5 - 2946733/38880*
         zeta1^5*eta1^3*zeta2*eta2^3 - 2096333/23328*zeta1^5*eta1^5*zeta2*eta2
          + 2250667/933120*zeta1^6*eta2^6 - 66346099/466560*zeta1^6*eta1^2*
         eta2^4 + 42407311/933120*zeta1^6*eta1^4*eta2^2 );

   dHtGustavsonvsHenrard =
       + alpha^6 * ( 1/12*eta1^2*zeta2^4*eta2^2 - 1/36*eta1^4*zeta2^4 - 2/9*
         zeta1*eta1^3*zeta2^3*eta2 - 1/12*zeta1^2*zeta2^2*eta2^4 + 1/12*
         zeta1^2*eta1^4*zeta2^2 + 2/9*zeta1^3*eta1*zeta2*eta2^3 + 1/36*zeta1^4
         *eta2^4 - 1/12*zeta1^4*eta1^2*eta2^2 )

       + alpha^8 * ( 595/648*i_*eta1^2*zeta2^5*eta2^3 + 319/648*i_*eta1^4*
         zeta2^5*eta2 + 97/162*i_*zeta1*eta1*zeta2^4*eta2^4 - 733/648*i_*zeta1
         *eta1^3*zeta2^4*eta2^2 - 845/648*i_*zeta1*eta1^5*zeta2^4 - 983/648*i_
         *zeta1^2*zeta2^3*eta2^5 - 97/27*i_*zeta1^2*eta1^2*zeta2^3*eta2^3 - 
         1897/648*i_*zeta1^2*eta1^4*zeta2^3*eta2 + 1897/648*i_*zeta1^3*eta1*
         zeta2^2*eta2^4 + 97/27*i_*zeta1^3*eta1^3*zeta2^2*eta2^2 + 983/648*i_*
         zeta1^3*eta1^5*zeta2^2 + 845/648*i_*zeta1^4*zeta2*eta2^5 + 733/648*i_
         *zeta1^4*eta1^2*zeta2*eta2^3 - 97/162*i_*zeta1^4*eta1^4*zeta2*eta2 - 
         319/648*i_*zeta1^5*eta1*eta2^4 - 595/648*i_*zeta1^5*eta1^3*eta2^2 )

       + alpha^10 * (  - 10723967/933120*eta1^2*zeta2^6*eta2^4 + 18840523/
         466560*eta1^4*zeta2^6*eta2^2 - 2246347/933120*eta1^6*zeta2^6 + 
         2565689/116640*zeta1*eta1*zeta2^5*eta2^5 + 912883/116640*zeta1*eta1^3
         *zeta2^5*eta2^3 - 823163/58320*zeta1*eta1^5*zeta2^5*eta2 - 1956421/
         186624*zeta1^2*zeta2^4*eta2^6 - 2566175/23328*zeta1^2*eta1^2*zeta2^4*
         eta2^4 + 7073731/186624*zeta1^2*eta1^4*zeta2^4*eta2^2 - 2387605/93312
         *zeta1^2*eta1^6*zeta2^4 + 280477/7776*zeta1^3*eta1*zeta2^3*eta2^5 + 
         11/108*zeta1^3*eta1^3*zeta2^3*eta2^3 - 281125/7776*zeta1^3*eta1^5*
         zeta2^3*eta2 + 2387605/93312*zeta1^4*zeta2^2*eta2^6 - 7045219/186624*
         zeta1^4*eta1^2*zeta2^2*eta2^4 + 2563583/23328*zeta1^4*eta1^4*zeta2^2*
         eta2^2 + 1959013/186624*zeta1^4*eta1^6*zeta2^2 + 823973/58320*zeta1^5
         *eta1*zeta2*eta2^5 - 922603/116640*zeta1^5*eta1^3*zeta2*eta2^3 - 
         2564069/116640*zeta1^5*eta1^5*zeta2*eta2 + 2250667/933120*zeta1^6*
         eta2^6 - 18840523/466560*zeta1^6*eta1^2*eta2^4 + 10736927/933120*
         zeta1^6*eta1^4*eta2^2 );

   dHtGustavsonvsHori =
       + alpha^6 * ( 1/12*eta1^2*zeta2^4*eta2^2 - 1/36*eta1^4*zeta2^4 - 2/9*
         zeta1*eta1^3*zeta2^3*eta2 - 1/12*zeta1^2*zeta2^2*eta2^4 + 1/12*
         zeta1^2*eta1^4*zeta2^2 + 2/9*zeta1^3*eta1*zeta2*eta2^3 + 1/36*zeta1^4
         *eta2^4 - 1/12*zeta1^4*eta1^2*eta2^2 )

       + alpha^8 * (  - 1841/4860*i_*eta1^2*zeta2^5*eta2^3 + 263/60*i_*eta1^4*
         zeta2^5*eta2 + 15517/4860*i_*zeta1*eta1*zeta2^4*eta2^4 + 4471/1620*i_
         *zeta1*eta1^3*zeta2^4*eta2^2 - 2104/405*i_*zeta1*eta1^5*zeta2^4 - 
         3419/1215*i_*zeta1^2*zeta2^3*eta2^5 - 15517/810*i_*zeta1^2*eta1^2*
         zeta2^3*eta2^3 - 1841/270*i_*zeta1^2*eta1^4*zeta2^3*eta2 + 1841/270*
         i_*zeta1^3*eta1*zeta2^2*eta2^4 + 15517/810*i_*zeta1^3*eta1^3*zeta2^2*
         eta2^2 + 3419/1215*i_*zeta1^3*eta1^5*zeta2^2 + 2104/405*i_*zeta1^4*
         zeta2*eta2^5 - 4471/1620*i_*zeta1^4*eta1^2*zeta2*eta2^3 - 15517/4860*
         i_*zeta1^4*eta1^4*zeta2*eta2 - 263/60*i_*zeta1^5*eta1*eta2^4 + 1841/
         4860*i_*zeta1^5*eta1^3*eta2^2 )

       + alpha^10 * (  - 177637681/6531840*eta1^2*zeta2^6*eta2^4 + 285738529/
         3265920*eta1^4*zeta2^6*eta2^2 - 2246347/933120*eta1^6*zeta2^6 + 
         43602301/816480*zeta1*eta1*zeta2^5*eta2^5 + 10677553/272160*zeta1*
         eta1^3*zeta2^5*eta2^3 - 823163/58320*zeta1*eta1^5*zeta2^5*eta2 - 
         171044647/6531840*zeta1^2*zeta2^4*eta2^6 - 43605703/163296*zeta1^2*
         eta1^2*zeta2^4*eta2^4 + 7073731/186624*zeta1^2*eta1^4*zeta2^4*eta2^2
          - 237421043/3265920*zeta1^2*eta1^6*zeta2^4 + 55092563/816480*zeta1^3
         *eta1*zeta2^3*eta2^5 + 11/108*zeta1^3*eta1^3*zeta2^3*eta2^3 - 
         55160603/816480*zeta1^3*eta1^5*zeta2^3*eta2 + 237421043/3265920*
         zeta1^4*zeta2^2*eta2^6 - 7045219/186624*zeta1^4*eta1^2*zeta2^2*eta2^4
          + 43587559/163296*zeta1^4*eta1^4*zeta2^2*eta2^2 + 171135367/6531840*
         zeta1^4*eta1^6*zeta2^2 + 823973/58320*zeta1^5*eta1*zeta2*eta2^5 - 
         10700233/272160*zeta1^5*eta1^3*zeta2*eta2^3 - 43590961/816480*zeta1^5
         *eta1^5*zeta2*eta2 + 2250667/933120*zeta1^6*eta2^6 - 285738529/
         3265920*zeta1^6*eta1^2*eta2^4 + 177728401/6531840*zeta1^6*eta1^4*
         eta2^2 );

   dHtGustavsonvsDragtFinn =
       + alpha^6 * ( 1/12*eta1^2*zeta2^4*eta2^2 - 1/36*eta1^4*zeta2^4 - 2/9*
         zeta1*eta1^3*zeta2^3*eta2 - 1/12*zeta1^2*zeta2^2*eta2^4 + 1/12*
         zeta1^2*eta1^4*zeta2^2 + 2/9*zeta1^3*eta1*zeta2*eta2^3 + 1/36*zeta1^4
         *eta2^4 - 1/12*zeta1^4*eta1^2*eta2^2 )

       + alpha^8 * ( 3469/1944*i_*eta1^2*zeta2^5*eta2^3 - 455/216*i_*eta1^4*
         zeta2^5*eta2 - 551/486*i_*zeta1*eta1*zeta2^4*eta2^4 - 2417/648*i_*
         zeta1*eta1^3*zeta2^4*eta2^2 + 839/648*i_*zeta1*eta1^5*zeta2^4 - 1265/
         1944*i_*zeta1^2*zeta2^3*eta2^5 + 551/81*i_*zeta1^2*eta1^2*zeta2^3*
         eta2^3 - 71/216*i_*zeta1^2*eta1^4*zeta2^3*eta2 + 71/216*i_*zeta1^3*
         eta1*zeta2^2*eta2^4 - 551/81*i_*zeta1^3*eta1^3*zeta2^2*eta2^2 + 1265/
         1944*i_*zeta1^3*eta1^5*zeta2^2 - 839/648*i_*zeta1^4*zeta2*eta2^5 + 
         2417/648*i_*zeta1^4*eta1^2*zeta2*eta2^3 + 551/486*i_*zeta1^4*eta1^4*
         zeta2*eta2 + 455/216*i_*zeta1^5*eta1*eta2^4 - 3469/1944*i_*zeta1^5*
         eta1^3*eta2^2 )

       + alpha^10 * (  - 6981053/2799360*eta1^2*zeta2^6*eta2^4 + 6245099/
         466560*eta1^4*zeta2^6*eta2^2 - 2246347/933120*eta1^6*zeta2^6 + 279871/
         69984*zeta1*eta1*zeta2^5*eta2^5 - 3559063/349920*zeta1*eta1^3*zeta2^5
         *eta2^3 - 823163/58320*zeta1*eta1^5*zeta2^5*eta2 - 4155467/2799360*
         zeta1^2*zeta2^4*eta2^6 - 1400813/69984*zeta1^2*eta1^2*zeta2^4*eta2^4
          + 7073731/186624*zeta1^2*eta1^4*zeta2^4*eta2^2 + 219133/155520*
         zeta1^2*eta1^6*zeta2^4 + 6323753/349920*zeta1^3*eta1*zeta2^3*eta2^5
          + 11/108*zeta1^3*eta1^3*zeta2^3*eta2^3 - 6352913/349920*zeta1^3*
         eta1^5*zeta2^3*eta2 - 219133/155520*zeta1^4*zeta2^2*eta2^6 - 7045219/
         186624*zeta1^4*eta1^2*zeta2^2*eta2^4 + 1393037/69984*zeta1^4*eta1^4*
         zeta2^2*eta2^2 + 4194347/2799360*zeta1^4*eta1^6*zeta2^2 + 823973/
         58320*zeta1^5*eta1*zeta2*eta2^5 + 3529903/349920*zeta1^5*eta1^3*zeta2
         *eta2^3 - 278899/69984*zeta1^5*eta1^5*zeta2*eta2 + 2250667/933120*
         zeta1^6*eta2^6 - 6245099/466560*zeta1^6*eta1^2*eta2^4 + 7019933/
         2799360*zeta1^6*eta1^4*eta2^2 );

    .end
  137.32 sec out of 142.01 sec
