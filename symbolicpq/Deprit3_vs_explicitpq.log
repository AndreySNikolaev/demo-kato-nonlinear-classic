FORM by J.Vermaseren,version 3.3(Jul  9 2009) Run at: Tue Jan 10 00:07:39 2017
    *==========================================================================
    *   This file is part of the demos for 
    *    "Generalization of the explicit expression for the Deprit generator 
    *       to  Hamiltonians nonlinearly dependent on small parameter"
    *     Andrey Nikolaev, ICPT, RDTeX, Russia, 2016, Andrey.Nikolaev@rdtex.ru
    *==========================================================================
    *	Comparison of the normal forms, generators, and the Gustavson integrals
    *       for the Deprit triangular and the explicit algorithms.
    *       Toda2d System.
    *       Deprit A (1969), Celestial Mech 1:12–30
    *       Normalisation in p,q variables.
    *==========================================================================
    *          MAXORDER - maximum order in alpha,
    *          NDIM - number of dimensions
    *-------------------- 
    #define MAXORDER	"10"
    #define NDIM    	"2"
    CFunctions sqrt,qurt,asqrt,aqurt,exp; 
    Symbols l,m,n,k,alpha(:{'MAXORDER'}),z
    *-------------------- 
    *			The following are the canonical variables:
    *-------------------- 
    #do j=1,'NDIM'
    	zeta'j',eta'j',P'j',Q'j',p'j',q'j'
    #enddo
    ;
    Off statistics;
    .global
    *-------------------- 
    *	1. The Hamiltonian in P,Q  variables is:
    *-------------------- 
    #define NAME "Toda2d"
    Global HPQ=1/2*(P1^2 + P2^2)+ 1/24*(exp(2*Q2+2*sqrt(3)*Q1)+exp(2*Q2-2*sqrt(3)*Q1
    )+exp(-4*Q2))-1/8;
    B alpha;
    Print;
    .sort

   HPQ =
       - 1/8 + 1/2*P2^2 + 1/2*P1^2 + 1/24*exp( - 4*Q2) + 1/24*exp(2*Q2 - 2*
         sqrt(3)*Q1) + 1/24*exp(2*Q2 + 2*sqrt(3)*Q1);

    id exp(m?)=sum_(n,0,{'MAXORDER'+2},m^n*invfac_(n));
    #call eidentities()
    B alpha;
    Print;
    .store

   HPQ =
       + 1/2*Q2^2 - 1/3*Q2^3 + 1/2*Q2^4 - 1/3*Q2^5 + 11/45*Q2^6 - 2/15*Q2^7 + 
         43/630*Q2^8 - 17/567*Q2^9 + 19/1575*Q2^10 - 62/14175*Q2^11 + 683/
         467775*Q2^12 + 1/2*P2^2 + 1/2*Q1^2 + Q1^2*Q2 + Q1^2*Q2^2 + 2/3*Q1^2*
         Q2^3 + 1/3*Q1^2*Q2^4 + 2/15*Q1^2*Q2^5 + 2/45*Q1^2*Q2^6 + 4/315*Q1^2*
         Q2^7 + 1/315*Q1^2*Q2^8 + 2/2835*Q1^2*Q2^9 + 2/14175*Q1^2*Q2^10 + 1/2*
         Q1^4 + Q1^4*Q2 + Q1^4*Q2^2 + 2/3*Q1^4*Q2^3 + 1/3*Q1^4*Q2^4 + 2/15*
         Q1^4*Q2^5 + 2/45*Q1^4*Q2^6 + 4/315*Q1^4*Q2^7 + 1/315*Q1^4*Q2^8 + 1/5*
         Q1^6 + 2/5*Q1^6*Q2 + 2/5*Q1^6*Q2^2 + 4/15*Q1^6*Q2^3 + 2/15*Q1^6*Q2^4
          + 4/75*Q1^6*Q2^5 + 4/225*Q1^6*Q2^6 + 3/70*Q1^8 + 3/35*Q1^8*Q2 + 3/35
         *Q1^8*Q2^2 + 2/35*Q1^8*Q2^3 + 1/35*Q1^8*Q2^4 + 1/175*Q1^10 + 2/175*
         Q1^10*Q2 + 2/175*Q1^10*Q2^2 + 1/1925*Q1^12 + 1/2*P1^2;

    *-------------------- 
    *	2. A scaling transform introduces a small parameter:
    *-------------------- 
    G H=HPQ/alpha^2;
    #do j=1,'NDIM'
    id P'j'=alpha*p'j';
    id Q'j'=alpha*q'j';
    #enddo
    .sort
    #call eidentities()
    B alpha;
    Print;
    .store

   H =
       + alpha * (  - 1/3*q2^3 + q1^2*q2 )

       + alpha^2 * ( 1/2*q2^4 + q1^2*q2^2 + 1/2*q1^4 )

       + alpha^3 * (  - 1/3*q2^5 + 2/3*q1^2*q2^3 + q1^4*q2 )

       + alpha^4 * ( 11/45*q2^6 + 1/3*q1^2*q2^4 + q1^4*q2^2 + 1/5*q1^6 )

       + alpha^5 * (  - 2/15*q2^7 + 2/15*q1^2*q2^5 + 2/3*q1^4*q2^3 + 2/5*q1^6*
         q2 )

       + alpha^6 * ( 43/630*q2^8 + 2/45*q1^2*q2^6 + 1/3*q1^4*q2^4 + 2/5*q1^6*
         q2^2 + 3/70*q1^8 )

       + alpha^7 * (  - 17/567*q2^9 + 4/315*q1^2*q2^7 + 2/15*q1^4*q2^5 + 4/15*
         q1^6*q2^3 + 3/35*q1^8*q2 )

       + alpha^8 * ( 19/1575*q2^10 + 1/315*q1^2*q2^8 + 2/45*q1^4*q2^6 + 2/15*
         q1^6*q2^4 + 3/35*q1^8*q2^2 + 1/175*q1^10 )

       + alpha^9 * (  - 62/14175*q2^11 + 2/2835*q1^2*q2^9 + 4/315*q1^4*q2^7 + 
         4/75*q1^6*q2^5 + 2/35*q1^8*q2^3 + 2/175*q1^10*q2 )

       + alpha^10 * ( 683/467775*q2^12 + 2/14175*q1^2*q2^10 + 1/315*q1^4*q2^8
          + 4/225*q1^6*q2^6 + 1/35*q1^8*q2^4 + 2/175*q1^10*q2^2 + 1/1925*q1^12
          )

       + 1/2*q2^2 + 1/2*p2^2 + 1/2*q1^2 + 1/2*p1^2;

    #call frequencies()

   Omega1 =
      1;


   Omega2 =
      1;

    Global Hpq = H;
    B alpha;
    Print;
    .store

   Hpq =
       + alpha * (  - 1/3*q2^3 + q1^2*q2 )

       + alpha^2 * ( 1/2*q2^4 + q1^2*q2^2 + 1/2*q1^4 )

       + alpha^3 * (  - 1/3*q2^5 + 2/3*q1^2*q2^3 + q1^4*q2 )

       + alpha^4 * ( 11/45*q2^6 + 1/3*q1^2*q2^4 + q1^4*q2^2 + 1/5*q1^6 )

       + alpha^5 * (  - 2/15*q2^7 + 2/15*q1^2*q2^5 + 2/3*q1^4*q2^3 + 2/5*q1^6*
         q2 )

       + alpha^6 * ( 43/630*q2^8 + 2/45*q1^2*q2^6 + 1/3*q1^4*q2^4 + 2/5*q1^6*
         q2^2 + 3/70*q1^8 )

       + alpha^7 * (  - 17/567*q2^9 + 4/315*q1^2*q2^7 + 2/15*q1^4*q2^5 + 4/15*
         q1^6*q2^3 + 3/35*q1^8*q2 )

       + alpha^8 * ( 19/1575*q2^10 + 1/315*q1^2*q2^8 + 2/45*q1^4*q2^6 + 2/15*
         q1^6*q2^4 + 3/35*q1^8*q2^2 + 1/175*q1^10 )

       + alpha^9 * (  - 62/14175*q2^11 + 2/2835*q1^2*q2^9 + 4/315*q1^4*q2^7 + 
         4/75*q1^6*q2^5 + 2/35*q1^8*q2^3 + 2/175*q1^10*q2 )

       + alpha^10 * ( 683/467775*q2^12 + 2/14175*q1^2*q2^10 + 1/315*q1^4*q2^8
          + 4/225*q1^6*q2^6 + 1/35*q1^8*q2^4 + 2/175*q1^10*q2^2 + 1/1925*q1^12
          )

       + 1/2*q2^2 + 1/2*p2^2 + 1/2*q1^2 + 1/2*p1^2;

    *-------------------- 
    *	The unperturbed part is as follows:
    *-------------------- 
    Global H0 = Hpq[alpha^0];
    Print;
    .store

   H0 =
      1/2*q2^2 + 1/2*p2^2 + 1/2*q1^2 + 1/2*p1^2;

    *------------------------------------------------------------------------------ 
    *     3. The Deprit triangular normalisation 
    *        and the corresponding Gustavson-Hori integral: 
    *------------------------------------------------------------------------------ 
    #call Deprit3Normalizationpq(dt)

Time =       2.48 sec    Generated terms =        445
             dtW         Terms in output =        445
                         Bytes used      =      10402

Time =       2.48 sec    Generated terms =        279
          dtHt10         Terms in output =        279
                         Bytes used      =       5906
    Global W3=dtW;
    Global d3Ht=dtHt'MAXORDER';
    .store
    #call Deprit3Inversepq(dtW,H0,dti)

Time =       2.71 sec    Generated terms =        467
       dtiUinv10         Terms in output =        467
                         Bytes used      =      10388
    Global d3IGH0=dtiUinv'MAXORDER'; 
    .store
    *------------------------------------------------------------------------------ 
    *     4. The explicit expression for the generator: 
    *------------------------------------------------------------------------------ 
    #call Wpq(e)

Time =     136.87 sec    Generated terms =       3417
             eSH         Terms in output =        445
                         Bytes used      =      10350
    Global W = eSH;
    .store
    *--------------------
    *    The transformed Hamiltonian U_W H:
    *--------------------
    #call Upq(W,Hpq,e)

Time =     137.04 sec    Generated terms =        279
            eU10         Terms in output =        279
                         Bytes used      =       5834
    .store
    Global eHt=eU'MAXORDER';
    .store
    *--------------------
    *  The Gustavson-Hori integral U_G^-1 H0 :
    *--------------------
    #call Uinversepq(W,H0,ei)

Time =     137.15 sec    Generated terms =        467
        eiUinv10         Terms in output =        467
                         Bytes used      =      10388
    G eIGH0= eiUinv'MAXORDER';
    .store
    *------------------------------------------------------------------------------ 
    *   5. The comparison between nonsecular and natural uniqueness conditions. 
    *     1) The Gustavson integrals are identical:
    *------------------------------------------------------------------------------ 
    write statistics;
    L deltaGustavsonIntegrals=eIGH0-d3IGH0;
    B alpha;
    Print;
    .store

Time =     137.15 sec    Generated terms =        934
stavsonIntegrals         Terms in output =          0
                         Bytes used      =          2

   deltaGustavsonIntegrals = 0;

    *-------------------- 
    *     2) The generators differ starting from the 5th order:
    *-------------------- 
    write statistics;
    G deltaGenerators=W-W3;
    B alpha;
    Print;
    .store

Time =     137.15 sec    Generated terms =        890
 deltaGenerators         Terms in output =        336
                         Bytes used      =       7878

   deltaGenerators =
       + alpha^5 * ( 1283/432*q1^2*p2*q2^5 + 1283/216*q1^2*p2^3*q2^3 + 1283/
         432*q1^2*p2^5*q2 - 6415/648*q1^4*p2*q2^3 - 1283/216*q1^4*p2^3*q2 + 
         1283/432*q1^6*p2*q2 - 1283/432*p1*q1*q2^6 - 1283/432*p1*q1*p2^2*q2^4
          + 1283/432*p1*q1*p2^4*q2^2 + 1283/432*p1*q1*p2^6 + 6415/648*p1*q1^3*
         q2^4 - 1283/108*p1*q1^3*p2^2*q2^2 - 1283/216*p1*q1^3*p2^4 - 1283/432*
         p1*q1^5*q2^2 + 1283/432*p1*q1^5*p2^2 - 1283/432*p1^2*p2*q2^5 - 1283/
         216*p1^2*p2^3*q2^3 - 1283/432*p1^2*p2^5*q2 + 1283/108*p1^2*q1^2*p2*
         q2^3 - 1283/108*p1^2*q1^2*p2^3*q2 + 1283/432*p1^2*q1^4*p2*q2 + 1283/
         216*p1^3*q1*q2^4 + 1283/108*p1^3*q1*p2^2*q2^2 - 6415/648*p1^3*q1*p2^4
          - 1283/216*p1^3*q1^3*q2^2 + 1283/216*p1^3*q1^3*p2^2 + 1283/216*p1^4*
         p2*q2^3 + 6415/648*p1^4*p2^3*q2 - 1283/432*p1^4*q1^2*p2*q2 - 1283/432
         *p1^5*q1*q2^2 + 1283/432*p1^5*q1*p2^2 - 1283/432*p1^6*p2*q2 )

       + alpha^6 * ( 1283/432*q1^2*p2*q2^6 + 1283/216*q1^2*p2^3*q2^4 - 1283/
         1296*q1^2*p2^5*q2^2 - 1283/324*q1^2*p2^7 - 32075/1296*q1^4*p2*q2^4 + 
         1283/162*q1^4*p2^3*q2^2 + 1283/144*q1^4*p2^5 + 6415/1296*q1^6*p2*q2^2
          - 1283/216*q1^6*p2^3 + 1283/1296*q1^8*p2 + 1283/216*p1*q1*q2^7 + 
         1283/54*p1*q1*p2^2*q2^5 + 24377/648*p1*q1*p2^4*q2^3 + 6415/324*p1*q1*
         p2^6*q2 - 1283/162*p1*q1^3*q2^5 - 21811/162*p1*q1^3*p2^2*q2^3 - 2566/
         81*p1*q1^3*p2^4*q2 + 8981/648*p1*q1^5*q2^3 + 6415/162*p1*q1^5*p2^2*q2
          - 1283/324*p1*q1^7*q2 + 1283/432*p1^2*p2*q2^6 + 1283/162*p1^2*p2^3*
         q2^4 + 14113/1296*p1^2*p2^5*q2^2 + 1283/216*p1^2*p2^7 + 14113/432*
         p1^2*q1^2*p2*q2^4 - 75697/648*p1^2*q1^2*p2^3*q2^2 - 8981/1296*p1^2*
         q1^2*p2^5 + 6415/1296*p1^2*q1^4*p2*q2^2 + 8981/648*p1^2*q1^4*p2^3 - 
         1283/1296*p1^2*q1^6*p2 - 16679/648*p1^3*q1*q2^5 - 1283/324*p1^3*q1*
         p2^2*q2^3 - 47471/648*p1^3*q1*p2^4*q2 + 29509/972*p1^3*q1^3*q2^3 + 
         8981/162*p1^3*q1^3*p2^2*q2 - 6415/648*p1^3*q1^5*q2 - 6415/324*p1^4*p2
         *q2^4 - 1283/72*p1^4*p2^3*q2^2 - 14113/648*p1^4*p2^5 + 1283/432*p1^4*
         q1^2*p2*q2^2 + 24377/648*p1^4*q1^2*p2^3 - 8981/1296*p1^4*q1^4*p2 + 
         14113/648*p1^5*q1*q2^3 - 1283/162*p1^5*q1^3*q2 + 24377/1296*p1^6*p2*
         q2^2 + 24377/1944*p1^6*p2^3 - 8981/1296*p1^6*q1^2*p2 - 1283/648*p1^7*
         q1*q2 - 1283/648*p1^8*p2 )

       + alpha^7 * (  - 475903/25920*q1^2*p2*q2^7 - 1838269/25920*q1^2*p2^3*
         q2^5 - 7105727/77760*q1^2*p2^5*q2^3 - 1040423/25920*q1^2*p2^7*q2 + 
         1483801/77760*q1^4*p2*q2^5 + 1338079/7776*q1^4*p2^3*q2^3 + 1348343/
         25920*q1^4*p2^5*q2 + 2099641/77760*q1^6*p2*q2^3 - 345217/25920*q1^6*
         p2^3*q2 - 270623/25920*q1^8*p2*q2 + 244963/25920*p1*q1*q2^8 + 347603/
         12960*p1*q1*p2^2*q2^6 - 29509/3888*p1*q1*p2^4*q2^4 - 783823/12960*p1*
         q1*p2^6*q2^2 - 329701/8640*p1*q1*p2^8 - 2407561/77760*p1*q1^3*q2^6 - 
         2264585/15552*p1*q1^3*p2^2*q2^4 + 178327/576*p1*q1^3*p2^4*q2^2 + 
         586301/8640*p1*q1^3*p2^6 - 1945681/77760*p1*q1^5*q2^4 + 540053/6480*
         p1*q1^5*p2^2*q2^2 - 1038037/25920*p1*q1^5*p2^4 + 124421/8640*p1*q1^7*
         q2^2 - 14023/25920*p1*q1^7*p2^2 - 1283/1296*p1*q1^9 + 175741/8640*
         p1^2*p2*q2^7 + 6079327/77760*p1^2*p2^3*q2^5 + 2454109/25920*p1^2*p2^5
         *q2^3 + 329701/8640*p1^2*p2^7*q2 - 591373/6480*p1^2*q1^2*p2*q2^5 - 
         33358/81*p1^2*q1^2*p2^3*q2^3 + 291211/2160*p1^2*q1^2*p2^5*q2 + 
         1094489/15552*p1^2*q1^4*p2*q2^3 + 1163591/5184*p1^2*q1^4*p2^3*q2 - 
         963443/12960*p1^2*q1^6*p2*q2 + 286139/8640*p1^3*q1*q2^6 + 139937/5184
         *p1^3*q1*p2^2*q2^4 - 280967/1728*p1^3*q1*p2^4*q2^2 + 2307907/25920*
         p1^3*q1*p2^6 - 116743/864*p1^3*q1^3*q2^4 - 24377/972*p1^3*q1^3*p2^2*
         q2^2 + 398923/7776*p1^3*q1^3*p2^4 + 6643847/77760*p1^3*q1^5*q2^2 - 
         4180487/77760*p1^3*q1^5*p2^2 - 1283/486*p1^3*q1^7 - 116663/25920*p1^4
         *p2*q2^5 - 124421/2592*p1^4*p2^3*q2^3 - 2307907/25920*p1^4*p2^5*q2 - 
         301415/5184*p1^4*q1^2*p2*q2^3 + 791581/5184*p1^4*q1^2*p2^3*q2 - 12830/
         243*p1^4*q1^4*p2*q2 - 2503043/25920*p1^5*q1*q2^4 - 886463/6480*p1^5*
         q1*p2^2*q2^2 + 2307907/25920*p1^5*q1*p2^4 + 9004567/77760*p1^5*q1^3*
         q2^2 - 7311007/77760*p1^5*q1^3*p2^2 - 8981/3888*p1^5*q1^5 - 1707583/
         25920*p1^6*p2*q2^3 - 2307907/25920*p1^6*p2^3*q2 + 706843/12960*p1^6*
         q1^2*p2*q2 + 1091743/25920*p1^7*q1*q2^2 - 329701/8640*p1^7*q1*p2^2 - 
         1283/1944*p1^7*q1^3 + 329701/8640*p1^8*p2*q2 )

       + alpha^8 * (  - 1248089/233280*q1^2*p2*q2^8 - 2156453/46656*q1^2*p2^3*
         q2^6 - 11955467/233280*q1^2*p2^5*q2^4 + 1253221/46656*q1^2*p2^7*q2^2
          + 2223169/58320*q1^2*p2^9 + 10353203/174960*q1^4*p2*q2^6 + 9236587/
         46656*q1^4*p2^3*q2^4 - 25891819/116640*q1^4*p2^5*q2^2 - 6633583/
         139968*q1^4*p2^7 + 23695189/116640*q1^6*p2*q2^4 - 170729/15552*q1^6*
         p2^3*q2^2 - 2615227/233280*q1^6*p2^5 - 124421/2160*q1^8*p2*q2^2 + 
         155213/5184*q1^8*p2^3 - 3846907/699840*q1^10*p2 - 595177/14580*p1*q1*
         q2^9 - 787627/3645*p1*q1*p2^2*q2^7 - 5732917/11664*p1*q1*p2^4*q2^5 - 
         15202943/29160*p1*q1*p2^6*q2^3 - 2392525/11664*p1*q1*p2^8*q2 + 
         11188639/174960*p1*q1^3*q2^7 + 89520791/116640*p1*q1^3*p2^2*q2^5 + 
         1153327/648*p1*q1^3*p2^4*q2^3 + 25422781/349920*p1*q1^3*p2^6*q2 - 
         7658903/58320*p1*q1^5*q2^5 + 29207903/58320*p1*q1^5*p2^2*q2^3 - 
         12261901/58320*p1*q1^5*p2^4*q2 - 475903/19440*p1*q1^7*q2^3 - 2561521/
         12960*p1*q1^7*p2^2*q2 + 3654457/174960*p1*q1^9*q2 - 1833137/46656*
         p1^2*p2*q2^8 - 6233287/46656*p1^2*p2^3*q2^6 - 46327309/233280*p1^2*
         p2^5*q2^4 - 38640653/233280*p1^2*p2^7*q2^2 - 783823/12960*p1^2*p2^9
          - 12075529/46656*p1^2*q1^2*p2*q2^6 + 9848107/46656*p1^2*q1^2*p2^3*
         q2^4 + 45128461/25920*p1^2*q1^2*p2^5*q2^2 + 4301629/46656*p1^2*q1^2*
         p2^7 - 2624411/46656*p1^2*q1^4*p2*q2^4 + 34479547/46656*p1^2*q1^4*
         p2^3*q2^2 - 20022701/58320*p1^2*q1^4*p2^5 - 237325/1728*p1^2*q1^6*p2*
         q2^2 + 650551/8640*p1^2*q1^6*p2^3 - 60301/3888*p1^2*q1^8*p2 + 2846167/
         29160*p1^3*q1*q2^7 - 17051677/116640*p1^3*q1*p2^2*q2^5 - 9340307/
         34992*p1^3*q1*p2^4*q2^3 + 67903183/116640*p1^3*q1*p2^6*q2 + 460787/
         12960*p1^3*q1^3*q2^5 + 2284873/3888*p1^3*q1^3*p2^2*q2^3 + 694033/864*
         p1^3*q1^3*p2^4*q2 - 13478951/58320*p1^3*q1^5*q2^3 - 35790007/38880*
         p1^3*q1^5*p2^2*q2 + 4511681/38880*p1^3*q1^7*q2 + 42196049/233280*p1^4
         *p2*q2^6 + 24413803/69984*p1^4*p2^3*q2^4 + 49614761/233280*p1^4*p2^5*
         q2^2 + 783823/4860*p1^4*p2^7 - 5255641/23328*p1^4*q1^2*p2*q2^4 + 
         14959579/46656*p1^4*q1^2*p2^3*q2^2 - 40151621/233280*p1^4*q1^2*p2^5
          + 1738375/15552*p1^4*q1^4*p2*q2^2 - 455375/1728*p1^4*q1^4*p2^3 + 
         255257/6480*p1^4*q1^6*p2 + 20082529/116640*p1^5*q1*q2^5 + 4217491/
         14580*p1^5*q1*p2^2*q2^3 + 87517553/116640*p1^5*q1*p2^4*q2 - 27349667/
         58320*p1^5*q1^3*q2^3 - 26757101/38880*p1^5*q1^3*p2^2*q2 + 7234027/
         38880*p1^5*q1^5*q2 + 1933751/233280*p1^6*p2*q2^4 - 14174743/233280*
         p1^6*p2^3*q2^2 + 5486761/58320*p1^6*p2^5 - 2538247/77760*p1^6*q1^2*p2
         *q2^2 - 93135293/233280*p1^6*q1^2*p2^3 + 13753153/116640*p1^6*q1^4*p2
          - 963443/3888*p1^7*q1*q2^3 - 183499/12960*p1^7*q1*p2^2*q2 + 2638861/
         23328*p1^7*q1^3*q2 - 13838191/77760*p1^8*p2*q2^2 - 783823/7290*p1^8*
         p2^3 + 6849127/77760*p1^8*q1^2*p2 + 886463/38880*p1^9*q1*q2 + 783823/
         38880*p1^10*p2 )

       + alpha^9 * ( 51768553/933120*q1^2*p2*q2^9 + 81280391/233280*q1^2*p2^3*
         q2^7 + 1057652683/1399680*q1^2*p2^5*q2^5 + 508338659/699840*q1^2*p2^7
         *q2^3 + 247575701/933120*q1^2*p2^9*q2 - 2739497/139968*q1^4*p2*q2^7
          - 119914541/233280*q1^4*p2^3*q2^5 - 826431493/699840*q1^4*p2^5*q2^3
          + 21886303/233280*q1^4*p2^7*q2 + 444994537/1399680*q1^6*p2*q2^5 - 
         2571308239/2099520*q1^6*p2^3*q2^3 - 631171189/1399680*q1^6*p2^5*q2 - 
         39078197/699840*q1^8*p2*q2^3 + 52230683/139968*q1^8*p2^3*q2 - 
         46671509/2799360*q1^10*p2*q2 + 31061123/933120*p1*q1*q2^10 + 14818573/
         186624*p1*q1*p2^2*q2^8 + 48941621/279936*p1*q1*p2^4*q2^6 + 121922279/
         279936*p1*q1*p2^6*q2^4 + 170080157/311040*p1*q1*p2^8*q2^2 + 226608509/
         933120*p1*q1*p2^10 - 2045813/43740*p1*q1^3*q2^8 + 26871875/69984*p1*
         q1^3*p2^2*q2^6 - 99479585/139968*p1*q1^3*p2^4*q2^4 - 213415879/58320*
         p1*q1^3*p2^6*q2^2 - 37250411/233280*p1*q1^3*p2^8 + 203408059/1399680*
         p1*q1^5*q2^6 + 966614867/279936*p1*q1^5*p2^2*q2^4 - 728454821/466560*
         p1*q1^5*p2^4*q2^2 - 93801029/466560*p1*q1^5*p2^6 - 25984985/139968*p1
         *q1^7*q2^4 - 140417/135*p1*q1^7*p2^2*q2^2 + 153555137/349920*p1*q1^7*
         p2^4 + 77253641/2799360*p1*q1^9*q2^2 - 219992393/2799360*p1*q1^9*p2^2
          + 4539727/699840*p1*q1^11 - 31211921/933120*p1^2*p2*q2^9 - 240710653/
         699840*p1^2*p2^3*q2^7 - 1144366739/1399680*p1^2*p2^5*q2^5 - 176408633/
         233280*p1^2*p2^7*q2^3 - 233998589/933120*p1^2*p2^9*q2 + 7407553/9720*
         p1^2*q1^2*p2*q2^7 + 1456555399/349920*p1^2*q1^2*p2^3*q2^5 + 798767153/
         174960*p1^2*q1^2*p2^5*q2^3 - 167772247/116640*p1^2*q1^2*p2^7*q2 - 
         2561599339/1399680*p1^2*q1^4*p2*q2^5 + 88650589/46656*p1^2*q1^4*p2^3*
         q2^3 - 1502511299/466560*p1^2*q1^4*p2^5*q2 - 29329487/349920*p1^2*
         q1^6*p2*q2^3 - 6599539/17496*p1^2*q1^6*p2^3*q2 + 20878165/62208*p1^2*
         q1^8*p2*q2 - 10010489/19440*p1^3*q1*q2^8 - 125109307/116640*p1^3*q1*
         p2^2*q2^6 + 5283757/5184*p1^3*q1*p2^4*q2^4 + 442979987/174960*p1^3*q1
         *p2^6*q2^2 - 198895709/699840*p1^3*q1*p2^8 + 155490281/139968*p1^3*
         q1^3*q2^6 + 97851559/139968*p1^3*q1^3*p2^2*q2^4 + 190065679/139968*
         p1^3*q1^3*p2^4*q2^2 - 278792731/139968*p1^3*q1^3*p2^6 - 33282667/
         699840*p1^3*q1^5*q2^4 - 11526479/6480*p1^3*q1^5*p2^2*q2^2 + 466202621/
         349920*p1^3*q1^5*p2^4 - 12574219/46656*p1^3*q1^7*q2^2 - 6583697/77760
         *p1^3*q1^7*p2^2 + 71183477/2099520*p1^3*q1^9 - 106330441/233280*p1^4*
         p2*q2^7 - 706633367/699840*p1^4*p2^3*q2^5 - 50166979/139968*p1^4*p2^5
         *q2^3 + 285729149/699840*p1^4*p2^7*q2 + 206379007/466560*p1^4*q1^2*p2
         *q2^5 + 183891707/139968*p1^4*q1^2*p2^3*q2^3 + 771137843/1399680*p1^4
         *q1^2*p2^5*q2 + 17550227/69984*p1^4*q1^4*p2*q2^3 - 132986705/34992*
         p1^4*q1^4*p2^3*q2 + 506468323/466560*p1^4*q1^6*p2*q2 + 14219179/31104
         *p1^5*q1*q2^6 - 551225/31104*p1^5*q1*p2^2*q2^4 - 1148676899/1399680*
         p1^5*q1*p2^4*q2^2 - 1734061163/1399680*p1^5*q1*p2^6 + 230248289/
         349920*p1^5*q1^3*q2^4 + 75196933/38880*p1^5*q1^3*p2^2*q2^2 + 
         284197751/699840*p1^5*q1^3*p2^4 - 514909687/466560*p1^5*q1^5*q2^2 + 
         217425647/466560*p1^5*q1^5*p2^2 + 2679917/46656*p1^5*q1^7 + 408395927/
         466560*p1^6*p2*q2^5 + 1211041259/699840*p1^6*p2^3*q2^3 + 1455701483/
         1399680*p1^6*p2^5*q2 - 5684293/38880*p1^6*q1^2*p2*q2^3 - 32056835/
         17496*p1^6*q1^2*p2^3*q2 + 77728931/155520*p1^6*q1^4*p2*q2 + 34297751/
         58320*p1^7*q1*q2^4 + 182607913/116640*p1^7*q1*p2^2*q2^2 - 181036349/
         699840*p1^7*q1*p2^4 - 51839819/46656*p1^7*q1^3*q2^2 + 159949229/
         233280*p1^7*q1^3*p2^2 + 3172589/77760*p1^7*q1^5 + 27975221/233280*
         p1^8*p2*q2^3 + 251242109/699840*p1^8*p2^3*q2 - 15505373/34560*p1^8*
         q1^2*p2*q2 - 100017791/311040*p1^9*q1*q2^2 + 71156863/311040*p1^9*q1*
         p2^2 + 4096349/349920*p1^9*q1^3 - 8544967/34560*p1^10*p2*q2 + 1283/
         1458*p1^11*q1 );

    *-------------------- 
    *     3) The normalised Hamiltonians differ starting from the 8th order:
    *-------------------- 
    L deltaHt=eHt-d3Ht;
    B alpha;
    Print;
    .store

   deltaHt =
       + alpha^8 * ( 1283/3888*q1^2*p2^2*q2^6 + 1283/1296*q1^2*p2^4*q2^4 + 
         1283/1296*q1^2*p2^6*q2^2 + 1283/3888*q1^2*p2^8 - 6415/1296*q1^4*p2^2*
         q2^4 - 1283/216*q1^4*p2^4*q2^2 - 1283/1296*q1^4*p2^6 + 6415/1296*q1^6
         *p2^2*q2^2 + 1283/1296*q1^6*p2^4 - 1283/3888*q1^8*p2^2 - 1283/1944*p1
         *q1*p2*q2^7 - 1283/648*p1*q1*p2^3*q2^5 - 1283/648*p1*q1*p2^5*q2^3 - 
         1283/1944*p1*q1*p2^7*q2 + 6415/648*p1*q1^3*p2*q2^5 + 1283/324*p1*q1^3
         *p2^3*q2^3 - 1283/216*p1*q1^3*p2^5*q2 - 6415/648*p1*q1^5*p2*q2^3 + 
         1283/216*p1*q1^5*p2^3*q2 + 1283/1944*p1*q1^7*p2*q2 + 1283/3888*p1^2*
         q2^8 + 1283/1296*p1^2*p2^2*q2^6 + 1283/1296*p1^2*p2^4*q2^4 + 1283/
         3888*p1^2*p2^6*q2^2 - 6415/1296*p1^2*q1^2*q2^6 + 1283/144*p1^2*q1^2*
         p2^2*q2^4 + 1283/144*p1^2*q1^2*p2^4*q2^2 - 6415/1296*p1^2*q1^2*p2^6
          + 6415/1296*p1^2*q1^4*q2^4 - 1283/144*p1^2*q1^4*p2^2*q2^2 + 1283/216
         *p1^2*q1^4*p2^4 - 1283/3888*p1^2*q1^6*q2^2 - 1283/1296*p1^2*q1^6*p2^2
          - 1283/216*p1^3*q1*p2*q2^5 + 1283/324*p1^3*q1*p2^3*q2^3 + 6415/648*
         p1^3*q1*p2^5*q2 - 1283/324*p1^3*q1^3*p2*q2^3 - 1283/324*p1^3*q1^3*
         p2^3*q2 + 1283/648*p1^3*q1^5*p2*q2 - 1283/1296*p1^4*q2^6 - 1283/216*
         p1^4*p2^2*q2^4 - 6415/1296*p1^4*p2^4*q2^2 + 1283/216*p1^4*q1^2*q2^4
          - 1283/144*p1^4*q1^2*p2^2*q2^2 + 6415/1296*p1^4*q1^2*p2^4 - 1283/
         1296*p1^4*q1^4*q2^2 - 1283/1296*p1^4*q1^4*p2^2 + 1283/216*p1^5*q1*p2*
         q2^3 - 6415/648*p1^5*q1*p2^3*q2 + 1283/648*p1^5*q1^3*p2*q2 + 1283/
         1296*p1^6*q2^4 + 6415/1296*p1^6*p2^2*q2^2 - 1283/1296*p1^6*q1^2*q2^2
          - 1283/3888*p1^6*q1^2*p2^2 + 1283/1944*p1^7*q1*p2*q2 - 1283/3888*
         p1^8*q2^2 )

       + alpha^10 * (  - 1979399/933120*q1^2*p2^2*q2^8 - 1979399/233280*q1^2*
         p2^4*q2^6 - 1979399/155520*q1^2*p2^6*q2^4 - 1979399/233280*q1^2*p2^8*
         q2^2 - 1979399/933120*q1^2*p2^10 + 13855793/466560*q1^4*p2^2*q2^6 + 
         1979399/31104*q1^4*p2^4*q2^4 + 1979399/51840*q1^4*p2^6*q2^2 + 1979399/
         466560*q1^4*p2^8 - 13855793/466560*q1^8*p2^2*q2^2 - 1979399/466560*
         q1^8*p2^4 + 1979399/933120*q1^10*p2^2 + 1979399/466560*p1*q1*p2*q2^9
          + 1979399/116640*p1*q1*p2^3*q2^7 + 1979399/77760*p1*q1*p2^5*q2^5 + 
         1979399/116640*p1*q1*p2^7*q2^3 + 1979399/466560*p1*q1*p2^9*q2 - 
         13855793/233280*p1*q1^3*p2*q2^7 - 1979399/25920*p1*q1^3*p2^3*q2^5 + 
         1979399/77760*p1*q1^3*p2^5*q2^3 + 1979399/46656*p1*q1^3*p2^7*q2 + 
         13855793/233280*p1*q1^7*p2*q2^3 - 1979399/46656*p1*q1^7*p2^3*q2 - 
         1979399/466560*p1*q1^9*p2*q2 - 1979399/933120*p1^2*q2^10 - 1979399/
         233280*p1^2*p2^2*q2^8 - 1979399/155520*p1^2*p2^4*q2^6 - 1979399/
         233280*p1^2*p2^6*q2^4 - 1979399/933120*p1^2*p2^8*q2^2 + 13855793/
         466560*p1^2*q1^2*q2^8 - 1979399/58320*p1^2*q1^2*p2^2*q2^6 - 1979399/
         15552*p1^2*q1^2*p2^4*q2^4 - 1979399/58320*p1^2*q1^2*p2^6*q2^2 + 
         13855793/466560*p1^2*q1^2*p2^8 - 13855793/466560*p1^2*q1^6*q2^4 + 
         1979399/58320*p1^2*q1^6*p2^2*q2^2 - 1979399/51840*p1^2*q1^6*p2^4 + 
         1979399/933120*p1^2*q1^8*q2^2 + 1979399/233280*p1^2*q1^8*p2^2 + 
         1979399/46656*p1^3*q1*p2*q2^7 + 1979399/77760*p1^3*q1*p2^3*q2^5 - 
         1979399/25920*p1^3*q1*p2^5*q2^3 - 13855793/233280*p1^3*q1*p2^7*q2 + 
         1979399/25920*p1^3*q1^5*p2*q2^3 - 1979399/77760*p1^3*q1^5*p2^3*q2 - 
         1979399/116640*p1^3*q1^7*p2*q2 + 1979399/466560*p1^4*q2^8 + 1979399/
         51840*p1^4*p2^2*q2^6 + 1979399/31104*p1^4*p2^4*q2^4 + 13855793/466560
         *p1^4*p2^6*q2^2 - 1979399/31104*p1^4*q1^4*q2^4 + 1979399/15552*p1^4*
         q1^4*p2^2*q2^2 - 1979399/31104*p1^4*q1^4*p2^4 + 1979399/233280*p1^4*
         q1^6*q2^2 + 1979399/155520*p1^4*q1^6*p2^2 - 1979399/77760*p1^5*q1^3*
         p2*q2^3 + 1979399/25920*p1^5*q1^3*p2^3*q2 - 1979399/77760*p1^5*q1^5*
         p2*q2 - 1979399/51840*p1^6*q1^2*q2^4 + 1979399/58320*p1^6*q1^2*p2^2*
         q2^2 - 13855793/466560*p1^6*q1^2*p2^4 + 1979399/155520*p1^6*q1^4*q2^2
          + 1979399/233280*p1^6*q1^4*p2^2 - 1979399/46656*p1^7*q1*p2*q2^3 + 
         13855793/233280*p1^7*q1*p2^3*q2 - 1979399/116640*p1^7*q1^3*p2*q2 - 
         1979399/466560*p1^8*q2^4 - 13855793/466560*p1^8*p2^2*q2^2 + 1979399/
         233280*p1^8*q1^2*q2^2 + 1979399/933120*p1^8*q1^2*p2^2 - 1979399/
         466560*p1^9*q1*p2*q2 + 1979399/933120*p1^10*q2^2 );

    *-------------------- 
    *    4) The normalized Hamiltonians are connected by the Deprit transform
    *    with the generator:
    *
    *    W_21=U_W deltaGenerators
    *-------------------- 
    #call Upq(W,deltaGenerators,dw)

Time =     137.28 sec    Generated terms =        321
           dwU10         Terms in output =        321
                         Bytes used      =       7706
    Global W21=dwU'MAXORDER';
    id alpha^'MAXORDER'=0;
    B alpha;
    Print;
    .store

   W21 =
       + alpha^5 * ( 1283/432*q1^2*p2*q2^5 + 1283/216*q1^2*p2^3*q2^3 + 1283/
         432*q1^2*p2^5*q2 - 6415/648*q1^4*p2*q2^3 - 1283/216*q1^4*p2^3*q2 + 
         1283/432*q1^6*p2*q2 - 1283/432*p1*q1*q2^6 - 1283/432*p1*q1*p2^2*q2^4
          + 1283/432*p1*q1*p2^4*q2^2 + 1283/432*p1*q1*p2^6 + 6415/648*p1*q1^3*
         q2^4 - 1283/108*p1*q1^3*p2^2*q2^2 - 1283/216*p1*q1^3*p2^4 - 1283/432*
         p1*q1^5*q2^2 + 1283/432*p1*q1^5*p2^2 - 1283/432*p1^2*p2*q2^5 - 1283/
         216*p1^2*p2^3*q2^3 - 1283/432*p1^2*p2^5*q2 + 1283/108*p1^2*q1^2*p2*
         q2^3 - 1283/108*p1^2*q1^2*p2^3*q2 + 1283/432*p1^2*q1^4*p2*q2 + 1283/
         216*p1^3*q1*q2^4 + 1283/108*p1^3*q1*p2^2*q2^2 - 6415/648*p1^3*q1*p2^4
          - 1283/216*p1^3*q1^3*q2^2 + 1283/216*p1^3*q1^3*p2^2 + 1283/216*p1^4*
         p2*q2^3 + 6415/648*p1^4*p2^3*q2 - 1283/432*p1^4*q1^2*p2*q2 - 1283/432
         *p1^5*q1*q2^2 + 1283/432*p1^5*q1*p2^2 - 1283/432*p1^6*p2*q2 )

       + alpha^7 * (  - 540053/25920*q1^2*p2*q2^7 - 540053/8640*q1^2*p2^3*q2^5
          - 540053/8640*q1^2*p2^5*q2^3 - 540053/25920*q1^2*p2^7*q2 + 3780371/
         77760*q1^4*p2*q2^5 + 540053/7776*q1^4*p2^3*q2^3 + 540053/25920*q1^4*
         p2^5*q2 + 3780371/77760*q1^6*p2*q2^3 + 540053/25920*q1^6*p2^3*q2 - 
         540053/25920*q1^8*p2*q2 + 540053/25920*p1*q1*q2^8 + 540053/12960*p1*
         q1*p2^2*q2^6 - 540053/12960*p1*q1*p2^6*q2^2 - 540053/25920*p1*q1*p2^8
          - 3780371/77760*p1*q1^3*q2^6 + 540053/15552*p1*q1^3*p2^2*q2^4 + 
         540053/5184*p1*q1^3*p2^4*q2^2 + 540053/25920*p1*q1^3*p2^6 - 3780371/
         77760*p1*q1^5*q2^4 + 540053/6480*p1*q1^5*p2^2*q2^2 + 540053/25920*p1*
         q1^5*p2^4 + 540053/25920*p1*q1^7*q2^2 - 540053/25920*p1*q1^7*p2^2 + 
         540053/25920*p1^2*p2*q2^7 + 540053/8640*p1^2*p2^3*q2^5 + 540053/8640*
         p1^2*p2^5*q2^3 + 540053/25920*p1^2*p2^7*q2 - 540053/6480*p1^2*q1^2*p2
         *q2^5 + 540053/6480*p1^2*q1^2*p2^5*q2 - 540053/15552*p1^2*q1^4*p2*
         q2^3 + 540053/5184*p1^2*q1^4*p2^3*q2 - 540053/12960*p1^2*q1^6*p2*q2
          - 540053/25920*p1^3*q1*q2^6 - 540053/5184*p1^3*q1*p2^2*q2^4 - 540053/
         15552*p1^3*q1*p2^4*q2^2 + 3780371/77760*p1^3*q1*p2^6 - 540053/7776*
         p1^3*q1^3*q2^4 + 540053/7776*p1^3*q1^3*p2^4 + 540053/8640*p1^3*q1^5*
         q2^2 - 540053/8640*p1^3*q1^5*p2^2 - 540053/25920*p1^4*p2*q2^5 - 
         540053/7776*p1^4*p2^3*q2^3 - 3780371/77760*p1^4*p2^5*q2 - 540053/5184
         *p1^4*q1^2*p2*q2^3 + 540053/15552*p1^4*q1^2*p2^3*q2 - 540053/25920*
         p1^5*q1*q2^4 - 540053/6480*p1^5*q1*p2^2*q2^2 + 3780371/77760*p1^5*q1*
         p2^4 + 540053/8640*p1^5*q1^3*q2^2 - 540053/8640*p1^5*q1^3*p2^2 - 
         540053/25920*p1^6*p2*q2^3 - 3780371/77760*p1^6*p2^3*q2 + 540053/12960
         *p1^6*q1^2*p2*q2 + 540053/25920*p1^7*q1*q2^2 - 540053/25920*p1^7*q1*
         p2^2 + 540053/25920*p1^8*p2*q2 )

       + alpha^9 * ( 71056501/933120*q1^2*p2*q2^9 + 71056501/233280*q1^2*p2^3*
         q2^7 + 71056501/155520*q1^2*p2^5*q2^5 + 71056501/233280*q1^2*p2^7*
         q2^3 + 71056501/933120*q1^2*p2^9*q2 - 71056501/699840*q1^4*p2*q2^7 - 
         86221909/699840*q1^4*p2^3*q2^5 + 8145137/139968*q1^4*p2^5*q2^3 + 
         55891093/699840*q1^4*p2^7*q2 - 497395507/1399680*q1^6*p2*q2^5 - 
         324951689/419904*q1^6*p2^3*q2^3 - 87346775/279936*q1^6*p2^5*q2 - 
         71056501/699840*q1^8*p2*q2^3 + 55891093/699840*q1^8*p2^3*q2 + 
         71056501/933120*q1^10*p2*q2 - 71056501/933120*p1*q1*q2^10 - 71056501/
         311040*p1*q1*p2^2*q2^8 - 71056501/466560*p1*q1*p2^4*q2^6 + 71056501/
         466560*p1*q1*p2^6*q2^4 + 71056501/311040*p1*q1*p2^8*q2^2 + 71056501/
         933120*p1*q1*p2^10 + 71056501/699840*p1*q1^3*q2^8 - 11936489/34992*p1
         *q1^3*p2^2*q2^6 - 63473797/69984*p1*q1^3*p2^4*q2^4 - 67265149/174960*
         p1*q1^3*p2^6*q2^2 + 55891093/699840*p1*q1^3*p2^8 + 497395507/1399680*
         p1*q1^5*q2^6 + 16945319/31104*p1*q1^5*p2^2*q2^4 - 71056501/93312*p1*
         q1^5*p2^4*q2^2 - 87346775/279936*p1*q1^5*p2^6 + 71056501/699840*p1*
         q1^7*q2^4 - 63473797/116640*p1*q1^7*p2^2*q2^2 + 55891093/699840*p1*
         q1^7*p2^4 - 71056501/933120*p1*q1^9*q2^2 + 71056501/933120*p1*q1^9*
         p2^2 - 71056501/933120*p1^2*p2*q2^9 - 71056501/233280*p1^2*p2^3*q2^7
          - 71056501/155520*p1^2*p2^5*q2^5 - 71056501/233280*p1^2*p2^7*q2^3 - 
         71056501/933120*p1^2*p2^9*q2 + 63473797/116640*p1^2*q1^2*p2*q2^7 + 
         63473797/116640*p1^2*q1^2*p2^3*q2^5 - 63473797/116640*p1^2*q1^2*p2^5*
         q2^3 - 63473797/116640*p1^2*q1^2*p2^7*q2 - 16945319/31104*p1^2*q1^4*
         p2*q2^5 + 40725685/139968*p1^2*q1^4*p2^3*q2^3 - 71056501/93312*p1^2*
         q1^4*p2^5*q2 + 11936489/34992*p1^2*q1^6*p2*q2^3 - 67265149/174960*
         p1^2*q1^6*p2^3*q2 + 71056501/311040*p1^2*q1^8*p2*q2 - 55891093/699840
         *p1^3*q1*q2^8 + 67265149/174960*p1^3*q1*p2^2*q2^6 + 63473797/69984*
         p1^3*q1*p2^4*q2^4 + 11936489/34992*p1^3*q1*p2^6*q2^2 - 71056501/
         699840*p1^3*q1*p2^8 + 324951689/419904*p1^3*q1^3*q2^6 - 40725685/
         139968*p1^3*q1^3*p2^2*q2^4 + 40725685/139968*p1^3*q1^3*p2^4*q2^2 - 
         324951689/419904*p1^3*q1^3*p2^6 + 86221909/699840*p1^3*q1^5*q2^4 - 
         63473797/116640*p1^3*q1^5*p2^2*q2^2 + 8145137/139968*p1^3*q1^5*p2^4
          - 71056501/233280*p1^3*q1^7*q2^2 + 71056501/233280*p1^3*q1^7*p2^2 - 
         55891093/699840*p1^4*p2*q2^7 - 8145137/139968*p1^4*p2^3*q2^5 + 
         86221909/699840*p1^4*p2^5*q2^3 + 71056501/699840*p1^4*p2^7*q2 + 
         71056501/93312*p1^4*q1^2*p2*q2^5 - 40725685/139968*p1^4*q1^2*p2^3*
         q2^3 + 16945319/31104*p1^4*q1^2*p2^5*q2 + 63473797/69984*p1^4*q1^4*p2
         *q2^3 - 63473797/69984*p1^4*q1^4*p2^3*q2 + 71056501/466560*p1^4*q1^6*
         p2*q2 + 87346775/279936*p1^5*q1*q2^6 + 71056501/93312*p1^5*q1*p2^2*
         q2^4 - 16945319/31104*p1^5*q1*p2^4*q2^2 - 497395507/1399680*p1^5*q1*
         p2^6 - 8145137/139968*p1^5*q1^3*q2^4 + 63473797/116640*p1^5*q1^3*p2^2
         *q2^2 - 86221909/699840*p1^5*q1^3*p2^4 - 71056501/155520*p1^5*q1^5*
         q2^2 + 71056501/155520*p1^5*q1^5*p2^2 + 87346775/279936*p1^6*p2*q2^5
          + 324951689/419904*p1^6*p2^3*q2^3 + 497395507/1399680*p1^6*p2^5*q2
          + 67265149/174960*p1^6*q1^2*p2*q2^3 - 11936489/34992*p1^6*q1^2*p2^3*
         q2 - 71056501/466560*p1^6*q1^4*p2*q2 - 55891093/699840*p1^7*q1*q2^4
          + 63473797/116640*p1^7*q1*p2^2*q2^2 - 71056501/699840*p1^7*q1*p2^4
          - 71056501/233280*p1^7*q1^3*q2^2 + 71056501/233280*p1^7*q1^3*p2^2 - 
         55891093/699840*p1^8*p2*q2^3 + 71056501/699840*p1^8*p2^3*q2 - 
         71056501/311040*p1^8*q1^2*p2*q2 - 71056501/933120*p1^9*q1*q2^2 + 
         71056501/933120*p1^9*q1*p2^2 - 71056501/933120*p1^10*p2*q2 );

    *--------------------
    *    This generator W_21 is secular (1-P_H0)W_21=0 :
    *-------------------- 
    Local PH0W21=W21;
    #call PH0()
    .sort
    Drop PH0W21;
    Local delta=W21-PH0W21;
    B alpha;
    Print;
    .store

   delta = 0;

    *-------------------- 
    *    The normalised Hamiltonians are connected by 
    *    the Deprit exponent with the generator W_21:
    *-------------------- 
    #call Uinversepq(W21,eHt,h21)

Time =     137.70 sec    Generated terms =        479
       h21Uinv10         Terms in output =        279
                         Bytes used      =       5906
    write statistics;
    L delta=d3Ht-h21Uinv'MAXORDER';
    B alpha;
    Print;
    .end

Time =     137.70 sec    Generated terms =        558
           delta         Terms in output =          0
                         Bytes used      =          2

   delta = 0;

  137.70 sec out of 239.26 sec
