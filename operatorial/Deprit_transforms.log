FORM by J.Vermaseren,version 3.3(Jul  9 2009) Run at: Thu Dec 22 15:51:15 2016
    *==========================================================================
    *   This file is part of the demos for 
    *    "Generalization of the explicit expression for the Deprit generator 
    *       to  Hamiltonians nonlinearly dependent on small parameter"
    *     Andrey Nikolaev, ICPT, RDTeX, Russia, 2016, Andrey.Nikolaev@rdtex.ru
    *==========================================================================
    *  Properties of the Deprit U_G and U_G^-1
    *==========================================================================
    #define MAXORDER	"6"
    
    *-----------------------
    * 1. Noncommutative functions represent operators
    *    L(G0) means Liouvillian operator L_{G0} = [.,G0] 
    *-----------------------
    Functions L,I,
    #do n = 0,'MAXORDER'-1
     ,W'n'
    #enddo
    ;
    .global
    off statistics;
    Symbols k,alpha(:{'MAXORDER'});
    .global
    *--------------------
    *   General Generator: 
    *--------------------
    Global W = 
    #do n = 0,'MAXORDER'-1
    + alpha^'n'*W'n'
    #enddo
    ;
    B alpha;
    Print;
    .store

   W =
       + alpha * ( W1 )

       + alpha^2 * ( W2 )

       + alpha^3 * ( W3 )

       + alpha^4 * ( W4 )

       + alpha^5 * ( W5 )

       + W0;

    *--------------------
    *  2. Compute U_W up to alpha^MAXORDER. 
    *       Arguments are: generator and an unique PREFIX
    *--------------------
    #call U(W,demo1)

Time =       0.01 sec    Generated terms =         64
          demo1U         Terms in output =         64
                         Bytes used      =       1316
    .store
    Global U =demo1U; 
    B alpha;
    Print;
    .store

   U =
       + alpha * ( L(W0) )

       + alpha^2 * ( 1/2*L(W0)*L(W0) + 1/2*L(W1) )

       + alpha^3 * ( 1/6*L(W0)*L(W0)*L(W0) + 1/3*L(W0)*L(W1) + 1/6*L(W1)*L(W0)
          + 1/3*L(W2) )

       + alpha^4 * ( 1/24*L(W0)*L(W0)*L(W0)*L(W0) + 1/8*L(W0)*L(W0)*L(W1) + 1/
         12*L(W0)*L(W1)*L(W0) + 1/4*L(W0)*L(W2) + 1/24*L(W1)*L(W0)*L(W0) + 1/8
         *L(W1)*L(W1) + 1/12*L(W2)*L(W0) + 1/4*L(W3) )

       + alpha^5 * ( 1/120*L(W0)*L(W0)*L(W0)*L(W0)*L(W0) + 1/30*L(W0)*L(W0)*L(
         W0)*L(W1) + 1/40*L(W0)*L(W0)*L(W1)*L(W0) + 1/10*L(W0)*L(W0)*L(W2) + 1/
         60*L(W0)*L(W1)*L(W0)*L(W0) + 1/15*L(W0)*L(W1)*L(W1) + 1/20*L(W0)*L(W2
         )*L(W0) + 1/5*L(W0)*L(W3) + 1/120*L(W1)*L(W0)*L(W0)*L(W0) + 1/30*L(W1
         )*L(W0)*L(W1) + 1/40*L(W1)*L(W1)*L(W0) + 1/10*L(W1)*L(W2) + 1/60*L(W2
         )*L(W0)*L(W0) + 1/15*L(W2)*L(W1) + 1/20*L(W3)*L(W0) + 1/5*L(W4) )

       + alpha^6 * ( 1/720*L(W0)*L(W0)*L(W0)*L(W0)*L(W0)*L(W0) + 1/144*L(W0)*
         L(W0)*L(W0)*L(W0)*L(W1) + 1/180*L(W0)*L(W0)*L(W0)*L(W1)*L(W0) + 1/36*
         L(W0)*L(W0)*L(W0)*L(W2) + 1/240*L(W0)*L(W0)*L(W1)*L(W0)*L(W0) + 1/48*
         L(W0)*L(W0)*L(W1)*L(W1) + 1/60*L(W0)*L(W0)*L(W2)*L(W0) + 1/12*L(W0)*
         L(W0)*L(W3) + 1/360*L(W0)*L(W1)*L(W0)*L(W0)*L(W0) + 1/72*L(W0)*L(W1)*
         L(W0)*L(W1) + 1/90*L(W0)*L(W1)*L(W1)*L(W0) + 1/18*L(W0)*L(W1)*L(W2)
          + 1/120*L(W0)*L(W2)*L(W0)*L(W0) + 1/24*L(W0)*L(W2)*L(W1) + 1/30*L(W0
         )*L(W3)*L(W0) + 1/6*L(W0)*L(W4) + 1/720*L(W1)*L(W0)*L(W0)*L(W0)*L(W0)
          + 1/144*L(W1)*L(W0)*L(W0)*L(W1) + 1/180*L(W1)*L(W0)*L(W1)*L(W0) + 1/
         36*L(W1)*L(W0)*L(W2) + 1/240*L(W1)*L(W1)*L(W0)*L(W0) + 1/48*L(W1)*L(
         W1)*L(W1) + 1/60*L(W1)*L(W2)*L(W0) + 1/12*L(W1)*L(W3) + 1/360*L(W2)*
         L(W0)*L(W0)*L(W0) + 1/72*L(W2)*L(W0)*L(W1) + 1/90*L(W2)*L(W1)*L(W0)
          + 1/18*L(W2)*L(W2) + 1/120*L(W3)*L(W0)*L(W0) + 1/24*L(W3)*L(W1) + 1/
         30*L(W4)*L(W0) + 1/6*L(W5) )

       + 1;

    *--------------------
    *  3. Compute U_W^-1 up to alpha^MAXORDER.
    *--------------------
    #call Uinverse(W,demo2)

Time =       0.01 sec    Generated terms =         64
         demo2Ui         Terms in output =         64
                         Bytes used      =       1316
    .store
    Global Uinv =demo2Ui; 
    B alpha;
    Print;
    .store

   Uinv =
       + alpha * (  - L(W0) )

       + alpha^2 * ( 1/2*L(W0)*L(W0) - 1/2*L(W1) )

       + alpha^3 * (  - 1/6*L(W0)*L(W0)*L(W0) + 1/6*L(W0)*L(W1) + 1/3*L(W1)*L(
         W0) - 1/3*L(W2) )

       + alpha^4 * ( 1/24*L(W0)*L(W0)*L(W0)*L(W0) - 1/24*L(W0)*L(W0)*L(W1) - 1/
         12*L(W0)*L(W1)*L(W0) + 1/12*L(W0)*L(W2) - 1/8*L(W1)*L(W0)*L(W0) + 1/8
         *L(W1)*L(W1) + 1/4*L(W2)*L(W0) - 1/4*L(W3) )

       + alpha^5 * (  - 1/120*L(W0)*L(W0)*L(W0)*L(W0)*L(W0) + 1/120*L(W0)*L(W0
         )*L(W0)*L(W1) + 1/60*L(W0)*L(W0)*L(W1)*L(W0) - 1/60*L(W0)*L(W0)*L(W2)
          + 1/40*L(W0)*L(W1)*L(W0)*L(W0) - 1/40*L(W0)*L(W1)*L(W1) - 1/20*L(W0)
         *L(W2)*L(W0) + 1/20*L(W0)*L(W3) + 1/30*L(W1)*L(W0)*L(W0)*L(W0) - 1/30
         *L(W1)*L(W0)*L(W1) - 1/15*L(W1)*L(W1)*L(W0) + 1/15*L(W1)*L(W2) - 1/10
         *L(W2)*L(W0)*L(W0) + 1/10*L(W2)*L(W1) + 1/5*L(W3)*L(W0) - 1/5*L(W4) )

       + alpha^6 * ( 1/720*L(W0)*L(W0)*L(W0)*L(W0)*L(W0)*L(W0) - 1/720*L(W0)*
         L(W0)*L(W0)*L(W0)*L(W1) - 1/360*L(W0)*L(W0)*L(W0)*L(W1)*L(W0) + 1/360
         *L(W0)*L(W0)*L(W0)*L(W2) - 1/240*L(W0)*L(W0)*L(W1)*L(W0)*L(W0) + 1/
         240*L(W0)*L(W0)*L(W1)*L(W1) + 1/120*L(W0)*L(W0)*L(W2)*L(W0) - 1/120*
         L(W0)*L(W0)*L(W3) - 1/180*L(W0)*L(W1)*L(W0)*L(W0)*L(W0) + 1/180*L(W0)
         *L(W1)*L(W0)*L(W1) + 1/90*L(W0)*L(W1)*L(W1)*L(W0) - 1/90*L(W0)*L(W1)*
         L(W2) + 1/60*L(W0)*L(W2)*L(W0)*L(W0) - 1/60*L(W0)*L(W2)*L(W1) - 1/30*
         L(W0)*L(W3)*L(W0) + 1/30*L(W0)*L(W4) - 1/144*L(W1)*L(W0)*L(W0)*L(W0)*
         L(W0) + 1/144*L(W1)*L(W0)*L(W0)*L(W1) + 1/72*L(W1)*L(W0)*L(W1)*L(W0)
          - 1/72*L(W1)*L(W0)*L(W2) + 1/48*L(W1)*L(W1)*L(W0)*L(W0) - 1/48*L(W1)
         *L(W1)*L(W1) - 1/24*L(W1)*L(W2)*L(W0) + 1/24*L(W1)*L(W3) + 1/36*L(W2)
         *L(W0)*L(W0)*L(W0) - 1/36*L(W2)*L(W0)*L(W1) - 1/18*L(W2)*L(W1)*L(W0)
          + 1/18*L(W2)*L(W2) - 1/12*L(W3)*L(W0)*L(W0) + 1/12*L(W3)*L(W1) + 1/6
         *L(W4)*L(W0) - 1/6*L(W5) )

       + 1;

    on statistics;
    .global
    *--------------------
    *  4. Demos for properties of Deprit exponents
    *    1) They are mutually inverse:
    *--------------------
    L EEinv= U*Uinv;
    L EinvE= Uinv*U;
    B alpha;
    Print;
    .store

Time =       0.01 sec    Generated terms =        256
           EEinv         Terms in output =          1
                         Bytes used      =         16

Time =       0.01 sec    Generated terms =        256
           EinvE         Terms in output =          1
                         Bytes used      =         16

   EEinv =
       + 1;

   EinvE =
       + 1;

    *--------------------
    *    2) d(U)/d(alpha) = U L_W :
    *--------------------
    G LW=W;
    *--------------------
    *	  Calculate L_W. 
    *--------------------
    #call toliouvillian()

Time =       0.01 sec    Generated terms =          6
              LW         Terms in output =          6
                         Bytes used      =        126

Time =       0.01 sec    Generated terms =          6
              LW         Terms in output =          6
                         Bytes used      =        118
    B alpha;
    Print;
    .store

Time =       0.01 sec    Generated terms =          6
              LW         Terms in output =          6
                         Bytes used      =        158

   LW =
       + alpha * ( L(W1) )

       + alpha^2 * ( L(W2) )

       + alpha^3 * ( L(W3) )

       + alpha^4 * ( L(W4) )

       + alpha^5 * ( L(W5) )

       + L(W0);

    *--------------------
    *	  Compute d(U)/d(alpha) up to alpha^(MAXORDER-1)
    *--------------------
    L DUDalpha= U;
    id alpha^k? = k*alpha^(k-1);
    B alpha;
    Print;
    .sort

Time =       0.01 sec    Generated terms =         63
        DUDalpha         Terms in output =         63
                         Bytes used      =       1298

   DUDalpha =
       + alpha * ( L(W0)*L(W0) + L(W1) )

       + alpha^2 * ( 1/2*L(W0)*L(W0)*L(W0) + L(W0)*L(W1) + 1/2*L(W1)*L(W0) + 
         L(W2) )

       + alpha^3 * ( 1/6*L(W0)*L(W0)*L(W0)*L(W0) + 1/2*L(W0)*L(W0)*L(W1) + 1/3
         *L(W0)*L(W1)*L(W0) + L(W0)*L(W2) + 1/6*L(W1)*L(W0)*L(W0) + 1/2*L(W1)*
         L(W1) + 1/3*L(W2)*L(W0) + L(W3) )

       + alpha^4 * ( 1/24*L(W0)*L(W0)*L(W0)*L(W0)*L(W0) + 1/6*L(W0)*L(W0)*L(W0
         )*L(W1) + 1/8*L(W0)*L(W0)*L(W1)*L(W0) + 1/2*L(W0)*L(W0)*L(W2) + 1/12*
         L(W0)*L(W1)*L(W0)*L(W0) + 1/3*L(W0)*L(W1)*L(W1) + 1/4*L(W0)*L(W2)*L(
         W0) + L(W0)*L(W3) + 1/24*L(W1)*L(W0)*L(W0)*L(W0) + 1/6*L(W1)*L(W0)*L(
         W1) + 1/8*L(W1)*L(W1)*L(W0) + 1/2*L(W1)*L(W2) + 1/12*L(W2)*L(W0)*L(W0
         ) + 1/3*L(W2)*L(W1) + 1/4*L(W3)*L(W0) + L(W4) )

       + alpha^5 * ( 1/120*L(W0)*L(W0)*L(W0)*L(W0)*L(W0)*L(W0) + 1/24*L(W0)*L(
         W0)*L(W0)*L(W0)*L(W1) + 1/30*L(W0)*L(W0)*L(W0)*L(W1)*L(W0) + 1/6*L(W0
         )*L(W0)*L(W0)*L(W2) + 1/40*L(W0)*L(W0)*L(W1)*L(W0)*L(W0) + 1/8*L(W0)*
         L(W0)*L(W1)*L(W1) + 1/10*L(W0)*L(W0)*L(W2)*L(W0) + 1/2*L(W0)*L(W0)*L(
         W3) + 1/60*L(W0)*L(W1)*L(W0)*L(W0)*L(W0) + 1/12*L(W0)*L(W1)*L(W0)*L(
         W1) + 1/15*L(W0)*L(W1)*L(W1)*L(W0) + 1/3*L(W0)*L(W1)*L(W2) + 1/20*L(
         W0)*L(W2)*L(W0)*L(W0) + 1/4*L(W0)*L(W2)*L(W1) + 1/5*L(W0)*L(W3)*L(W0)
          + L(W0)*L(W4) + 1/120*L(W1)*L(W0)*L(W0)*L(W0)*L(W0) + 1/24*L(W1)*L(
         W0)*L(W0)*L(W1) + 1/30*L(W1)*L(W0)*L(W1)*L(W0) + 1/6*L(W1)*L(W0)*L(W2
         ) + 1/40*L(W1)*L(W1)*L(W0)*L(W0) + 1/8*L(W1)*L(W1)*L(W1) + 1/10*L(W1)
         *L(W2)*L(W0) + 1/2*L(W1)*L(W3) + 1/60*L(W2)*L(W0)*L(W0)*L(W0) + 1/12*
         L(W2)*L(W0)*L(W1) + 1/15*L(W2)*L(W1)*L(W0) + 1/3*L(W2)*L(W2) + 1/20*
         L(W3)*L(W0)*L(W0) + 1/4*L(W3)*L(W1) + 1/5*L(W4)*L(W0) + L(W5) )

       + L(W0);

    *--------------------
    *	Because we computed the derivative only up to alpha^(MAXORDER-1), 
    *       the identitiy holds up to the same order
    *--------------------
    L Delta=DUDalpha - U*LW;
    id alpha^'MAXORDER' =0;
    B alpha;
    Print;
    .store

Time =       0.01 sec    Generated terms =         63
        DUDalpha         Terms in output =         63
                         Bytes used      =       1298

Time =       0.01 sec    Generated terms =        126
           Delta         Terms in output =          0
                         Bytes used      =          2

   DUDalpha =
       + alpha * ( L(W0)*L(W0) + L(W1) )

       + alpha^2 * ( 1/2*L(W0)*L(W0)*L(W0) + L(W0)*L(W1) + 1/2*L(W1)*L(W0) + 
         L(W2) )

       + alpha^3 * ( 1/6*L(W0)*L(W0)*L(W0)*L(W0) + 1/2*L(W0)*L(W0)*L(W1) + 1/3
         *L(W0)*L(W1)*L(W0) + L(W0)*L(W2) + 1/6*L(W1)*L(W0)*L(W0) + 1/2*L(W1)*
         L(W1) + 1/3*L(W2)*L(W0) + L(W3) )

       + alpha^4 * ( 1/24*L(W0)*L(W0)*L(W0)*L(W0)*L(W0) + 1/6*L(W0)*L(W0)*L(W0
         )*L(W1) + 1/8*L(W0)*L(W0)*L(W1)*L(W0) + 1/2*L(W0)*L(W0)*L(W2) + 1/12*
         L(W0)*L(W1)*L(W0)*L(W0) + 1/3*L(W0)*L(W1)*L(W1) + 1/4*L(W0)*L(W2)*L(
         W0) + L(W0)*L(W3) + 1/24*L(W1)*L(W0)*L(W0)*L(W0) + 1/6*L(W1)*L(W0)*L(
         W1) + 1/8*L(W1)*L(W1)*L(W0) + 1/2*L(W1)*L(W2) + 1/12*L(W2)*L(W0)*L(W0
         ) + 1/3*L(W2)*L(W1) + 1/4*L(W3)*L(W0) + L(W4) )

       + alpha^5 * ( 1/120*L(W0)*L(W0)*L(W0)*L(W0)*L(W0)*L(W0) + 1/24*L(W0)*L(
         W0)*L(W0)*L(W0)*L(W1) + 1/30*L(W0)*L(W0)*L(W0)*L(W1)*L(W0) + 1/6*L(W0
         )*L(W0)*L(W0)*L(W2) + 1/40*L(W0)*L(W0)*L(W1)*L(W0)*L(W0) + 1/8*L(W0)*
         L(W0)*L(W1)*L(W1) + 1/10*L(W0)*L(W0)*L(W2)*L(W0) + 1/2*L(W0)*L(W0)*L(
         W3) + 1/60*L(W0)*L(W1)*L(W0)*L(W0)*L(W0) + 1/12*L(W0)*L(W1)*L(W0)*L(
         W1) + 1/15*L(W0)*L(W1)*L(W1)*L(W0) + 1/3*L(W0)*L(W1)*L(W2) + 1/20*L(
         W0)*L(W2)*L(W0)*L(W0) + 1/4*L(W0)*L(W2)*L(W1) + 1/5*L(W0)*L(W3)*L(W0)
          + L(W0)*L(W4) + 1/120*L(W1)*L(W0)*L(W0)*L(W0)*L(W0) + 1/24*L(W1)*L(
         W0)*L(W0)*L(W1) + 1/30*L(W1)*L(W0)*L(W1)*L(W0) + 1/6*L(W1)*L(W0)*L(W2
         ) + 1/40*L(W1)*L(W1)*L(W0)*L(W0) + 1/8*L(W1)*L(W1)*L(W1) + 1/10*L(W1)
         *L(W2)*L(W0) + 1/2*L(W1)*L(W3) + 1/60*L(W2)*L(W0)*L(W0)*L(W0) + 1/12*
         L(W2)*L(W0)*L(W1) + 1/15*L(W2)*L(W1)*L(W0) + 1/3*L(W2)*L(W2) + 1/20*
         L(W3)*L(W0)*L(W0) + 1/4*L(W3)*L(W1) + 1/5*L(W4)*L(W0) + L(W5) )

       + L(W0);

   Delta = 0;

    *--------------------
    *    3) d(U^-1)/d(alpha) = -L_W U:
    *--------------------
    L DUinvDalpha= Uinv;
    id alpha^k? = k*alpha^(k-1);
    B alpha;
    Print;
    .sort

Time =       0.01 sec    Generated terms =         63
     DUinvDalpha         Terms in output =         63
                         Bytes used      =       1298

   DUinvDalpha =
       + alpha * ( L(W0)*L(W0) - L(W1) )

       + alpha^2 * (  - 1/2*L(W0)*L(W0)*L(W0) + 1/2*L(W0)*L(W1) + L(W1)*L(W0)
          - L(W2) )

       + alpha^3 * ( 1/6*L(W0)*L(W0)*L(W0)*L(W0) - 1/6*L(W0)*L(W0)*L(W1) - 1/3
         *L(W0)*L(W1)*L(W0) + 1/3*L(W0)*L(W2) - 1/2*L(W1)*L(W0)*L(W0) + 1/2*L(
         W1)*L(W1) + L(W2)*L(W0) - L(W3) )

       + alpha^4 * (  - 1/24*L(W0)*L(W0)*L(W0)*L(W0)*L(W0) + 1/24*L(W0)*L(W0)*
         L(W0)*L(W1) + 1/12*L(W0)*L(W0)*L(W1)*L(W0) - 1/12*L(W0)*L(W0)*L(W2)
          + 1/8*L(W0)*L(W1)*L(W0)*L(W0) - 1/8*L(W0)*L(W1)*L(W1) - 1/4*L(W0)*L(
         W2)*L(W0) + 1/4*L(W0)*L(W3) + 1/6*L(W1)*L(W0)*L(W0)*L(W0) - 1/6*L(W1)
         *L(W0)*L(W1) - 1/3*L(W1)*L(W1)*L(W0) + 1/3*L(W1)*L(W2) - 1/2*L(W2)*L(
         W0)*L(W0) + 1/2*L(W2)*L(W1) + L(W3)*L(W0) - L(W4) )

       + alpha^5 * ( 1/120*L(W0)*L(W0)*L(W0)*L(W0)*L(W0)*L(W0) - 1/120*L(W0)*
         L(W0)*L(W0)*L(W0)*L(W1) - 1/60*L(W0)*L(W0)*L(W0)*L(W1)*L(W0) + 1/60*
         L(W0)*L(W0)*L(W0)*L(W2) - 1/40*L(W0)*L(W0)*L(W1)*L(W0)*L(W0) + 1/40*
         L(W0)*L(W0)*L(W1)*L(W1) + 1/20*L(W0)*L(W0)*L(W2)*L(W0) - 1/20*L(W0)*
         L(W0)*L(W3) - 1/30*L(W0)*L(W1)*L(W0)*L(W0)*L(W0) + 1/30*L(W0)*L(W1)*
         L(W0)*L(W1) + 1/15*L(W0)*L(W1)*L(W1)*L(W0) - 1/15*L(W0)*L(W1)*L(W2)
          + 1/10*L(W0)*L(W2)*L(W0)*L(W0) - 1/10*L(W0)*L(W2)*L(W1) - 1/5*L(W0)*
         L(W3)*L(W0) + 1/5*L(W0)*L(W4) - 1/24*L(W1)*L(W0)*L(W0)*L(W0)*L(W0) + 
         1/24*L(W1)*L(W0)*L(W0)*L(W1) + 1/12*L(W1)*L(W0)*L(W1)*L(W0) - 1/12*L(
         W1)*L(W0)*L(W2) + 1/8*L(W1)*L(W1)*L(W0)*L(W0) - 1/8*L(W1)*L(W1)*L(W1)
          - 1/4*L(W1)*L(W2)*L(W0) + 1/4*L(W1)*L(W3) + 1/6*L(W2)*L(W0)*L(W0)*L(
         W0) - 1/6*L(W2)*L(W0)*L(W1) - 1/3*L(W2)*L(W1)*L(W0) + 1/3*L(W2)*L(W2)
          - 1/2*L(W3)*L(W0)*L(W0) + 1/2*L(W3)*L(W1) + L(W4)*L(W0) - L(W5) )

       - L(W0);

    L Delta=DUinvDalpha + LW*Uinv;
    id alpha^'MAXORDER' =0;
    B alpha;
    Print;
    .end

Time =       0.01 sec    Generated terms =         63
     DUinvDalpha         Terms in output =         63
                         Bytes used      =       1298

Time =       0.01 sec    Generated terms =        126
           Delta         Terms in output =          0
                         Bytes used      =          2

   DUinvDalpha =
       + alpha * ( L(W0)*L(W0) - L(W1) )

       + alpha^2 * (  - 1/2*L(W0)*L(W0)*L(W0) + 1/2*L(W0)*L(W1) + L(W1)*L(W0)
          - L(W2) )

       + alpha^3 * ( 1/6*L(W0)*L(W0)*L(W0)*L(W0) - 1/6*L(W0)*L(W0)*L(W1) - 1/3
         *L(W0)*L(W1)*L(W0) + 1/3*L(W0)*L(W2) - 1/2*L(W1)*L(W0)*L(W0) + 1/2*L(
         W1)*L(W1) + L(W2)*L(W0) - L(W3) )

       + alpha^4 * (  - 1/24*L(W0)*L(W0)*L(W0)*L(W0)*L(W0) + 1/24*L(W0)*L(W0)*
         L(W0)*L(W1) + 1/12*L(W0)*L(W0)*L(W1)*L(W0) - 1/12*L(W0)*L(W0)*L(W2)
          + 1/8*L(W0)*L(W1)*L(W0)*L(W0) - 1/8*L(W0)*L(W1)*L(W1) - 1/4*L(W0)*L(
         W2)*L(W0) + 1/4*L(W0)*L(W3) + 1/6*L(W1)*L(W0)*L(W0)*L(W0) - 1/6*L(W1)
         *L(W0)*L(W1) - 1/3*L(W1)*L(W1)*L(W0) + 1/3*L(W1)*L(W2) - 1/2*L(W2)*L(
         W0)*L(W0) + 1/2*L(W2)*L(W1) + L(W3)*L(W0) - L(W4) )

       + alpha^5 * ( 1/120*L(W0)*L(W0)*L(W0)*L(W0)*L(W0)*L(W0) - 1/120*L(W0)*
         L(W0)*L(W0)*L(W0)*L(W1) - 1/60*L(W0)*L(W0)*L(W0)*L(W1)*L(W0) + 1/60*
         L(W0)*L(W0)*L(W0)*L(W2) - 1/40*L(W0)*L(W0)*L(W1)*L(W0)*L(W0) + 1/40*
         L(W0)*L(W0)*L(W1)*L(W1) + 1/20*L(W0)*L(W0)*L(W2)*L(W0) - 1/20*L(W0)*
         L(W0)*L(W3) - 1/30*L(W0)*L(W1)*L(W0)*L(W0)*L(W0) + 1/30*L(W0)*L(W1)*
         L(W0)*L(W1) + 1/15*L(W0)*L(W1)*L(W1)*L(W0) - 1/15*L(W0)*L(W1)*L(W2)
          + 1/10*L(W0)*L(W2)*L(W0)*L(W0) - 1/10*L(W0)*L(W2)*L(W1) - 1/5*L(W0)*
         L(W3)*L(W0) + 1/5*L(W0)*L(W4) - 1/24*L(W1)*L(W0)*L(W0)*L(W0)*L(W0) + 
         1/24*L(W1)*L(W0)*L(W0)*L(W1) + 1/12*L(W1)*L(W0)*L(W1)*L(W0) - 1/12*L(
         W1)*L(W0)*L(W2) + 1/8*L(W1)*L(W1)*L(W0)*L(W0) - 1/8*L(W1)*L(W1)*L(W1)
          - 1/4*L(W1)*L(W2)*L(W0) + 1/4*L(W1)*L(W3) + 1/6*L(W2)*L(W0)*L(W0)*L(
         W0) - 1/6*L(W2)*L(W0)*L(W1) - 1/3*L(W2)*L(W1)*L(W0) + 1/3*L(W2)*L(W2)
          - 1/2*L(W3)*L(W0)*L(W0) + 1/2*L(W3)*L(W1) + L(W4)*L(W0) - L(W5) )

       - L(W0);

   Delta = 0;

  0.01 sec out of 0.40 sec
